<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="11/5/2022 7:59:44 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="GUSTI"
  DTS:CreatorName="GUSTI\tinus"
  DTS:DTSID="{8DF9D855-E2EC-43AA-8F65-0B27720400FA}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.845.0"
  DTS:LocaleID="14345"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="103"
  DTS:VersionGUID="{C95B1B35-F3E0-474D-8102-0F45EA9BA5E3}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{71F126FE-519C-430A-A9D4-355BC269D7B4}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.Jet.OLEDB.4.0;Data Source=C:\Users\tinus\Downloads\Sales.xls;Extended Properties=&quot;EXCEL 8.0;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\dimension_category"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{3bda392c-ba3a-4813-af33-705a2fb2c228}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="dimension_category"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\dimension_category\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dimension_category\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_category\Data Conversion.Inputs[Data Conversion Input].Columns[Product_Category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Product_Category"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Product_Category]" />
                    <inputColumn
                      refId="Package\dimension_category\Data Conversion.Inputs[Data Conversion Input].Columns[Sub_Category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Sub_Category"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\dimension_category\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product_Category]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="25"
                      lineageId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product_Category]"
                      name="Copy of Product_Category"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Product_Category]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sub_Category]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="30"
                      lineageId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sub_Category]"
                      name="Copy of Sub_Category"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\dimension_category\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_category\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sales$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_category\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Product_Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product_Category]"
                      length="255"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Product_Category]"
                      name="Product_Category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sub_Category]"
                      length="255"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]"
                      name="Sub_Category"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                      dataType="date"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Day]"
                      dataType="r8"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                      dataType="wstr"
                      length="255"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                      dataType="r8"
                      name="Year" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Age]"
                      dataType="r8"
                      name="Customer_Age" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Age_Group]"
                      dataType="wstr"
                      length="255"
                      name="Age_Group" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Gender]"
                      dataType="wstr"
                      length="255"
                      name="Customer_Gender" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country]"
                      dataType="wstr"
                      length="255"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[State]"
                      dataType="wstr"
                      length="255"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product_Category]"
                      dataType="wstr"
                      length="255"
                      name="Product_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sub_Category]"
                      dataType="wstr"
                      length="255"
                      name="Sub_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product]"
                      dataType="wstr"
                      length="255"
                      name="Product" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Order_Quantity]"
                      dataType="r8"
                      name="Order_Quantity" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Cost]"
                      dataType="r8"
                      name="Unit_Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Price]"
                      dataType="r8"
                      name="Unit_Price" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Profit]"
                      dataType="r8"
                      name="Profit" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cost]"
                      dataType="r8"
                      name="Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].ExternalColumns[Revenue]"
                      dataType="r8"
                      name="Revenue" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\dimension_category\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Error Output].Columns[Product_Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Error Output].Columns[Product_Category]"
                      name="Product_Category" />
                    <outputColumn
                      refId="Package\dimension_category\Excel Source.Outputs[Excel Source Error Output].Columns[Sub_Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Error Output].Columns[Sub_Category]"
                      name="Sub_Category" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_category\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DIM_CATEGORY]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_category\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID"
                      externalMetadataColumnId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_CATEGORY]"
                      lineageId="Package\dimension_category\Script Component.Outputs[Output 0].Columns[ID]" />
                    <inputColumn
                      refId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Product_Category]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="Copy of Product_Category"
                      cachedSortKeyPosition="3"
                      externalMetadataColumnId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PRODUCT_CATEGORY]"
                      lineageId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Copy of Product_Category]" />
                    <inputColumn
                      refId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Sub_Category]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="30"
                      cachedName="Copy of Sub_Category"
                      cachedSortKeyPosition="4"
                      externalMetadataColumnId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SUB_CATEGORY]"
                      lineageId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Copy of Sub_Category]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_CATEGORY]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="ID_CATEGORY" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PRODUCT_CATEGORY]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PRODUCT_CATEGORY" />
                    <externalMetadataColumn
                      refId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SUB_CATEGORY]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="SUB_CATEGORY" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_category\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_category\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_category\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_category\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_category\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_category\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    int i = 1;
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ID = (i < 10) ? "CA0" + i : "C" + i;
        i++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_026425e59fb443b7a7ec036025f24d49.Properties.Settings.get_Default():SC_026425e59fb443b7a7ec036025f24d49.Properties.Sett" +
    "ings")]

namespace SC_026425e59fb443b7a7ec036025f24d49.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_026425e59fb443b7a7ec036025f24d49.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9bed8741-2094-41fe-af32-37d3c78176f9}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_026425e59fb443b7a7ec036025f24d49</RootNamespace>
    <AssemblyName>SC_026425e59fb443b7a7ec036025f24d49</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_026425e59fb443b7a7ec036025f24d49" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_026425e59fb443b7a7ec036025f24d49</msb:CodeName>
    <msb:DisplayName>SC_026425e59fb443b7a7ec036025f24d49</msb:DisplayName>
    <msb:ProjectId>{962BF1C8-F129-4842-B3F5-76DAFDD270BE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_026425e59fb443b7a7ec036025f24d49.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_026425e59fb443b7a7ec036025f24d49")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_026425e59fb443b7a7ec036025f24d49")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_026425e59fb443b7a7ec036025f24d49.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_026425e59fb443b7a7ec036025f24d49.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_026425e59fb443b7a7ec036025f24d49.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_026425e59fb443b7a7ec036025f24d49.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_026425e59fb443b7a7ec036025f24d49.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_026425e59fb443b7a7ec036025f24d49.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAmdaGMAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAbjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABwxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
MQAAAAAAAEgAAAACAAUA2CEAAIwOAAABAAAAAAAAAGQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMASwAAAAAAAAADAnsBAAAE
HwoyF3IBAABwAnwBAAAEKBIAAAooEwAACisVcgUAAHACfAEAAAQoEgAACigTAAAKbwYAAAYCAnsB
AAAEF1h9AQAABCo6Ahd9AQAABAIoCgAABioqAgMEBSgUAAAKKiYCFgMoFQAACipaAywIAhYoFgAA
CipyDQAAcHMXAAAKeh4CKBgAAAoqHgIoGQAACip+AigaAAAKAgJzDgAABn0CAAAEAgJzDwAABn0D
AAAEKpIEcqoAAHAabxsAAAosFQIFAgMoHAAACg4EcwUAAAZvDAAABipKKwcCA28NAAAGA28IAAAG
LfEqBio6AigdAAAKAgN9BAAABCo6AigdAAAKAgN9BQAABCoeAigdAAAKKq5+BgAABC0ecroAAHDQ
BwAAAigeAAAKbx8AAApzIAAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKCEA
AAoqLnMVAAAGgAgAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAMAUAACN+
AACcBQAAGAYAACNTdHJpbmdzAAAAALQLAAAsAQAAI1VTAOAMAAAQAAAAI0dVSUQAAADwDAAAnAEA
ACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAAACAAAAAIAAAACAAAABYAAAAPAAAA
IQAAABAAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAPsCAQAAAAAABgDxAUgEBgCFAkgEBgA9
ATUEDwC8BAAABgBqAYoDBgDUAYoDBgC1AYoDBgBsAooDBgARAooDBgAqAooDBgCBAYoDBgCcAcAC
CgBFAooACgAHBIoADgD4A4oACgDTA4oACgCJBYoABgBMBUIDBgAgATUEBgAYBGgEBgDHA3UDEgDw
AOUCEgBRAeUCEgDYAGADBgAFAUgEBgABAEIDBgDcAkIDBgCcA0IDBgC2A0IDBgCrAEIDBgBcAEID
BgAOBooDAAAAACsAAAAAAAEAAQABABAAVQMAABAAAQABAAEAEADrAwAAOQACAAUAAQAQAGsFAABF
AAIACgABABAAOQUAAEkABAAOAAEAEAD6BAAASQAFAA8AAAAQAG8EywRJAAYAEAAAARAAKQXLBGEA
CAAUAAEA4wJtAAYAOQVwAAYA+gR0AAEAeQV4AAEAeQV4ABEASQN8ABEAyACAABEATACEAFAgAAAA
AMYAowIGAAEAWCAAAAAAxgCuAgYAAQBgIAAAAADGAOsFiAABALcgAAAAAIYYKAQGAAIAxiAAAAAA
hhgoBCUAAgDRIAAAAACGCDQAEAAFANsgAAAAAIYIIwOOAAYA8iAAAAAAhgACBjUABwD6IAAAAACG
AFMFNQAHAAIhAAAAAIYYKAQGAAcAIiEAAAAAxgDeBZMABwBHIQAAAADGAdcFiAALAFohAAAAAMYB
6wWIAAwAXCEAAAAAhhgoBJ0ADQBrIQAAAACGGCgEnQAOAHohAAAAAIMYKAQGAA8AgiEAAAAAkwgU
BKMADwCuIQAAAACTCLAAqAAPALUhAAAAAJMIvACtAA8AvSEAAAAAlghfBbMAEADEIQAAAACGGCgE
BgAQAMwhAAAAAJEYLgS4ABAAAAABAAYGAAABAA0EAAACAAQFAAADAOEDAAABALoCAAABALoCAAAB
ADsAAAACAIAAAAADAA0EAAAEAOEDAAABAA0EAAABAAYGAAABAI8FAAABAI8FAAABALoCCQAoBAEA
EQAoBAYAGQAoBAoAKQAoBBAAMQAoBBAAOQAoBBAAQQAoBBAASQAoBBAAUQAoBBAAWQAoBBAAYQAo
BBAAaQAoBAYAmQAoBAYAuQAoBBUAyQAoBAYAiQCjAgYAiQCuAgYA0QDaAhsA2QBFBR8AcQAoBCUA
cQA5Ay8AcQAxAwEA4QAoBBAAcQACBjUAcQBTBTUAiQAoBAYA2QAyBTkAiQAYBUAAkQAoBAYA8QBu
AEYA8QAKBk0AoQAoBFMAwQAoBAYALgALANMALgATANwALgAbAPsALgAjAAQBLgArAC0BLgAzAC0B
LgA7AC0BLgBDAAQBLgBLADMBLgBTAC0BLgBbAEoBQwBjAJQBaQBzAPsAiQBzAPsA4wBrAJQBAQF7
AJQBAwABAAcAAwAIAAUAAABAALwAAAAnA8AAAAAYBMQAAADQAMkAAABjBc4AAQAGAAMAAQAHAAUA
AgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEAAAAAAAAAAAAAAAAABwAAAAQAAAAAAAAAAAAA
AFsAQwAAAAAADwAAAAAAAAAAAAAAZACZBQAAAAAPAAAAAAAAAAAAAABkALYFAAAAAAQAAAAAAAAA
AAAAAFsAQgMAAAAAAAAAAAEAAAB5BAAAAAAASW50MzIAU0NfMDI2NDI1ZTU5ZmI0NDNiN2E3ZWMw
MzYwMjVmMjRkNDkAPE1vZHVsZT4Ac2V0X0lEAElucHV0SUQAbXNjb3JsaWIAZGVmYXVsdEluc3Rh
bmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAaQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMDI2NDI1
ZTU5ZmI0NDNiN2E3ZWMwMzYwMjVmMjRkNDkuZGxsAHNldF9JRF9Jc051bGwAU2V0TnVsbABzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhj
ZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRN
YXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzAyNjQyNWU1OWZiNDQzYjdhN2VjMDM2
MDI1ZjI0ZDQ5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
Q18wMjY0MjVlNTlmYjQ0M2I3YTdlYzAzNjAyNWYyNGQ0OS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBC
dWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5l
Y3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1
dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAA0MAAAdDAEEA
MAAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAA
cwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAg
AHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQA
IAAwAABxUwBDAF8AMAAyADYANAAyADUAZQA1ADkAZgBiADQANAAzAGIANwBhADcAZQBjADAAMwA2
ADAAMgA1AGYAMgA0AGQANAA5AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMA
ZQBzAABTOAiJdlq5SLzghrmnu68+AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZAyAADgUAAg4O
DgkgAwESPR0IEkEFIAIBCBwDIAACBiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3
elxWGTTgiQiJhF3NgIDMkQIGCAMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAE
AQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygAAgQIABJRBAgAElUE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfMDI2NDI1ZTU5ZmI0NDNiN2E3ZWMwMzYwMjVmMjRkNDkAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABEMQAAAAAAAAAA
AABeMQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUDEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AMAAyADYANAAyADUAZQA1ADkAZgBiADQANAAzAGIANwBhADcAZQBjADAAMwA2ADAA
MgA1AGYAMgA0AGQANAA5AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAwADIANgA0ADIA
NQBlADUAOQBmAGIANAA0ADMAYgA3AGEANwBlAGMAMAAzADYAMAAyADUAZgAyADQAZAA0ADkALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADAA
MgA2ADQAMgA1AGUANQA5AGYAYgA0ADQAMwBiADcAYQA3AGUAYwAwADMANgAwADIANQBmADIANABk
ADQAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAwADIA
NgA0ADIANQBlADUAOQBmAGIANAA0ADMAYgA3AGEANwBlAGMAMAAzADYAMAAyADUAZgAyADQAZAA0
ADkAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_026425e59fb443b7a7ec036025f24d49</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">45</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dimension_category\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_category\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\dimension_category\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_category\Script Component.Outputs[Output 0].Columns[ID]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\dimension_category\Script Component.Outputs[Output 0].Columns[ID]"
                      name="ID" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_category\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dimension_category\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_category\Sort.Inputs[Sort Input].Columns[Product_Category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Product_Category"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Product_Category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_category\Sort.Inputs[Sort Input].Columns[Sub_Category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Sub_Category"
                      lineageId="Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_category\Sort.Inputs[Sort Input].Columns[Copy of Product_Category]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="Copy of Product_Category"
                      lineageId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product_Category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_category\Sort.Inputs[Sort Input].Columns[Copy of Sub_Category]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="30"
                      cachedName="Copy of Sub_Category"
                      lineageId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sub_Category]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_category\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Product_Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Product_Category]"
                      name="Product_Category"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Product_Category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Sub_Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Sub_Category]"
                      name="Sub_Category"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_category\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Copy of Product_Category]"
                      codePage="1252"
                      dataType="str"
                      length="25"
                      lineageId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Copy of Product_Category]"
                      name="Copy of Product_Category"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_category\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product_Category]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Copy of Sub_Category]"
                      codePage="1252"
                      dataType="str"
                      length="30"
                      lineageId="Package\dimension_category\Sort.Outputs[Sort Output].Columns[Copy of Sub_Category]"
                      name="Copy of Sub_Category"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_category\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Sub_Category]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\dimension_category.Paths[Data Conversion Output]"
              endId="Package\dimension_category\Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\dimension_category\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\dimension_category.Paths[Excel Source Output]"
              endId="Package\dimension_category\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\dimension_category\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\dimension_category.Paths[Output 0]"
              endId="Package\dimension_category\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\dimension_category\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\dimension_category.Paths[Sort Output]"
              endId="Package\dimension_category\Script Component.Inputs[Input 0]"
              name="Sort Output"
              startId="Package\dimension_category\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\dimension_customer"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{2244E663-E70E-416A-B71F-056808B25289}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="dimension_customer"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\dimension_customer\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dimension_customer\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_customer\Data Conversion.Inputs[Data Conversion Input].Columns[Customer_Gender]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Customer_Gender"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Gender]" />
                    <inputColumn
                      refId="Package\dimension_customer\Data Conversion.Inputs[Data Conversion Input].Columns[Age_Group]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Age_Group"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Age_Group]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\dimension_customer\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Customer_Gender]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="1"
                      lineageId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Customer_Gender]"
                      name="Copy of Customer_Gender"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Gender]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Age_Group]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="25"
                      lineageId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Age_Group]"
                      name="Copy of Age_Group"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Age_Group]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\dimension_customer\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_customer\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sales$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_customer\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Age]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Age]"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Age]"
                      name="Customer_Age"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Age_Group]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Age_Group]"
                      length="255"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Age_Group]"
                      name="Age_Group"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Gender]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Gender]"
                      length="255"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Gender]"
                      name="Customer_Gender"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                      dataType="date"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Day]"
                      dataType="r8"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                      dataType="wstr"
                      length="255"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                      dataType="r8"
                      name="Year" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Age]"
                      dataType="r8"
                      name="Customer_Age" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Age_Group]"
                      dataType="wstr"
                      length="255"
                      name="Age_Group" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Gender]"
                      dataType="wstr"
                      length="255"
                      name="Customer_Gender" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country]"
                      dataType="wstr"
                      length="255"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[State]"
                      dataType="wstr"
                      length="255"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product_Category]"
                      dataType="wstr"
                      length="255"
                      name="Product_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sub_Category]"
                      dataType="wstr"
                      length="255"
                      name="Sub_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product]"
                      dataType="wstr"
                      length="255"
                      name="Product" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Order_Quantity]"
                      dataType="r8"
                      name="Order_Quantity" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Cost]"
                      dataType="r8"
                      name="Unit_Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Price]"
                      dataType="r8"
                      name="Unit_Price" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Profit]"
                      dataType="r8"
                      name="Profit" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cost]"
                      dataType="r8"
                      name="Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].ExternalColumns[Revenue]"
                      dataType="r8"
                      name="Revenue" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[Customer_Age]"
                      dataType="r8"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[Customer_Age]"
                      name="Customer_Age" />
                    <outputColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[Age_Group]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[Age_Group]"
                      name="Age_Group" />
                    <outputColumn
                      refId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[Customer_Gender]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Error Output].Columns[Customer_Gender]"
                      name="Customer_Gender" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_customer\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DIM_CUSTOMER]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_customer\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID"
                      externalMetadataColumnId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_CUST]"
                      lineageId="Package\dimension_customer\Script Component.Outputs[Output 0].Columns[ID]" />
                    <inputColumn
                      refId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Customer_Age]"
                      cachedDataType="r8"
                      cachedName="Customer_Age"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CUST_AGE]"
                      lineageId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Customer_Age]" />
                    <inputColumn
                      refId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Customer_Gender]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="Copy of Customer_Gender"
                      externalMetadataColumnId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CUST_GENDER]"
                      lineageId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Copy of Customer_Gender]" />
                    <inputColumn
                      refId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Age_Group]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="Copy of Age_Group"
                      externalMetadataColumnId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AGE_GROUP]"
                      lineageId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Copy of Age_Group]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_CUST]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="ID_CUST" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CUST_AGE]"
                      dataType="i4"
                      name="CUST_AGE" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[AGE_GROUP]"
                      codePage="1252"
                      dataType="str"
                      length="25"
                      name="AGE_GROUP" />
                    <externalMetadataColumn
                      refId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CUST_GENDER]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      name="CUST_GENDER" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_customer\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_customer\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_customer\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    /// 

    int i = 1;
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ID = (i<10) ? "C0" + i : "C" + i;
        i++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e30ca94f4824886866fc46a5821cb99.Properties.Settings.get_Default():SC_3e30ca94f4824886866fc46a5821cb99.Properties.Sett" +
    "ings")]

namespace SC_3e30ca94f4824886866fc46a5821cb99.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_3e30ca94f4824886866fc46a5821cb99.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ed4c55f5-2ad8-430c-ab74-dda8e1eddcf4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_3e30ca94f4824886866fc46a5821cb99</RootNamespace>
    <AssemblyName>SC_00FC8EC5607948F1968D2DBED055253C</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_3e30ca94f4824886866fc46a5821cb99" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_3e30ca94f4824886866fc46a5821cb99</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_3e30ca94f4824886866fc46a5821cb99</msb:DisplayName>
    <msb:ProjectId>{0C21F7C6-41FA-4E96-B2FC-0006B603AC3A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_3e30ca94f4824886866fc46a5821cb99.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_3e30ca94f4824886866fc46a5821cb99")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_3e30ca94f4824886866fc46a5821cb99")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e30ca94f4824886866fc46a5821cb99.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e30ca94f4824886866fc46a5821cb99.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e30ca94f4824886866fc46a5821cb99.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_3e30ca94f4824886866fc46a5821cb99.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_3e30ca94f4824886866fc46a5821cb99.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_00FC8EC5607948F1968D2DBED055253C.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAN8UaWMAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAbjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABwxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
MQAAAAAAAEgAAAACAAUA2CEAAIwOAAABAAAAAAAAAGQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMASwAAAAAAAAADAnsBAAAE
HwoyF3IBAABwAnwBAAAEKBIAAAooEwAACisVcgUAAHACfAEAAAQoEgAACigTAAAKbwYAAAYCAnsB
AAAEF1h9AQAABCo6Ahd9AQAABAIoCgAABioqAgMEBSgUAAAKKiYCFgMoFQAACipaAywIAhYoFgAA
CipyCwAAcHMXAAAKeh4CKBgAAAoqHgIoGQAACip+AigaAAAKAgJzDgAABn0CAAAEAgJzDwAABn0D
AAAEKpIEcqgAAHAabxsAAAosFQIFAgMoHAAACg4EcwUAAAZvDAAABipKKwcCA28NAAAGA28IAAAG
LfEqBio6AigdAAAKAgN9BAAABCo6AigdAAAKAgN9BQAABCoeAigdAAAKKq5+BgAABC0ecrgAAHDQ
BwAAAigeAAAKbx8AAApzIAAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKCEA
AAoqLnMVAAAGgAgAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAMAUAACN+
AACcBQAAGAYAACNTdHJpbmdzAAAAALQLAAAsAQAAI1VTAOAMAAAQAAAAI0dVSUQAAADwDAAAnAEA
ACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAAACAAAAAIAAAACAAAABYAAAAPAAAA
IQAAABAAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAPsCAQAAAAAABgDxAUgEBgCFAkgEBgA9
ATUEDwC8BAAABgBqAYoDBgDUAYoDBgC1AYoDBgBsAooDBgARAooDBgAqAooDBgCBAYoDBgCcAcAC
CgBFAooACgAHBIoADgD4A4oACgDTA4oACgCJBYoABgBMBUIDBgAgATUEBgAYBGgEBgDHA3UDEgDw
AOUCEgBRAeUCEgDYAGADBgAFAUgEBgABAEIDBgDcAkIDBgCcA0IDBgC2A0IDBgCrAEIDBgBcAEID
BgAOBooDAAAAAAcAAAAAAAEAAQABABAAVQMAABAAAQABAAEAEADrAwAAOQACAAUAAQAQAGsFAABF
AAIACgABABAAOQUAAEkABAAOAAEAEAD6BAAASQAFAA8AAAAQAG8EywRJAAYAEAAAARAAKQXLBGEA
CAAUAAEA4wJtAAYAOQVwAAYA+gR0AAEAeQV4AAEAeQV4ABEASQN8ABEAyACAABEATACEAFAgAAAA
AMYAowIGAAEAWCAAAAAAxgCuAgYAAQBgIAAAAADGAOsFiAABALcgAAAAAIYYKAQGAAIAxiAAAAAA
hhgoBCUAAgDRIAAAAACGCDQAEAAFANsgAAAAAIYIIwOOAAYA8iAAAAAAhgACBjUABwD6IAAAAACG
AFMFNQAHAAIhAAAAAIYYKAQGAAcAIiEAAAAAxgDeBZMABwBHIQAAAADGAdcFiAALAFohAAAAAMYB
6wWIAAwAXCEAAAAAhhgoBJ0ADQBrIQAAAACGGCgEnQAOAHohAAAAAIMYKAQGAA8AgiEAAAAAkwgU
BKMADwCuIQAAAACTCLAAqAAPALUhAAAAAJMIvACtAA8AvSEAAAAAlghfBbMAEADEIQAAAACGGCgE
BgAQAMwhAAAAAJEYLgS4ABAAAAABAAYGAAABAA0EAAACAAQFAAADAOEDAAABALoCAAABALoCAAAB
ADsAAAACAIAAAAADAA0EAAAEAOEDAAABAA0EAAABAAYGAAABAI8FAAABAI8FAAABALoCCQAoBAEA
EQAoBAYAGQAoBAoAKQAoBBAAMQAoBBAAOQAoBBAAQQAoBBAASQAoBBAAUQAoBBAAWQAoBBAAYQAo
BBAAaQAoBAYAmQAoBAYAuQAoBBUAyQAoBAYAiQCjAgYAiQCuAgYA0QDaAhsA2QBFBR8AcQAoBCUA
cQA5Ay8AcQAxAwEA4QAoBBAAcQACBjUAcQBTBTUAiQAoBAYA2QAyBTkAiQAYBUAAkQAoBAYA8QBu
AEYA8QAKBk0AoQAoBFMAwQAoBAYALgALANMALgATANwALgAbAPsALgAjAAQBLgArAC0BLgAzAC0B
LgA7AC0BLgBDAAQBLgBLADMBLgBTAC0BLgBbAEoBQwBjAJQBaQBzAPsAiQBzAPsA4wBrAJQBAQF7
AJQBAwABAAcAAwAIAAUAAABAALwAAAAnA8AAAAAYBMQAAADQAMkAAABjBc4AAQAGAAMAAQAHAAUA
AgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEAAAAAAAAAAAAAAAAAEAAAAAQAAAAAAAAAAAAA
AFsAQwAAAAAADwAAAAAAAAAAAAAAZACZBQAAAAAPAAAAAAAAAAAAAABkALYFAAAAAAQAAAAAAAAA
AAAAAFsAQgMAAAAAAAAAAAEAAAB5BAAAAAAASW50MzIAPE1vZHVsZT4AU0NfMDBGQzhFQzU2MDc5
NDhGMTk2OEQyREJFRDA1NTI1M0MAc2V0X0lEAElucHV0SUQAbXNjb3JsaWIAZGVmYXVsdEluc3Rh
bmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAaQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfMDBGQzhF
QzU2MDc5NDhGMTk2OEQyREJFRDA1NTI1M0MuZGxsAHNldF9JRF9Jc051bGwAU2V0TnVsbABzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhj
ZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRN
YXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzNlMzBjYTk0ZjQ4MjQ4ODY4NjZmYzQ2
YTU4MjFjYjk5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
Q18zZTMwY2E5NGY0ODI0ODg2ODY2ZmM0NmE1ODIxY2I5OS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBC
dWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5l
Y3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1
dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAA0MAAAVDADAA
AICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMA
ZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAA
MAAAcVMAQwBfADMAZQAzADAAYwBhADkANABmADQAOAAyADQAOAA4ADYAOAA2ADYAZgBjADQANgBh
ADUAOAAyADEAYwBiADkAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAACmBFka+mfsQplX5dPcvK+OAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZAyAADgUAAg4O
DgkgAwESPR0IEkEFIAIBCBwDIAACBiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3
elxWGTTgiQiJhF3NgIDMkQIGCAMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAE
AQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygAAgQIABJRBAgAElUE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfM2UzMGNhOTRmNDgyNDg4Njg2NmZjNDZhNTgyMWNiOTkAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABEMQAAAAAAAAAA
AABeMQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUDEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AMwBlADMAMABjAGEAOQA0AGYANAA4ADIANAA4ADgANgA4ADYANgBmAGMANAA2AGEA
NQA4ADIAMQBjAGIAOQA5AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAwADAARgBDADgA
RQBDADUANgAwADcAOQA0ADgARgAxADkANgA4AEQAMgBEAEIARQBEADAANQA1ADIANQAzAEMALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADAA
MABGAEMAOABFAEMANQA2ADAANwA5ADQAOABGADEAOQA2ADgARAAyAEQAQgBFAEQAMAA1ADUAMgA1
ADMAQwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAzAGUA
MwAwAGMAYQA5ADQAZgA0ADgAMgA0ADgAOAA2ADgANgA2AGYAYwA0ADYAYQA1ADgAMgAxAGMAYgA5
ADkAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_00fc8ec5607948f1968d2dbed055253c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">45</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dimension_customer\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_customer\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\dimension_customer\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_customer\Script Component.Outputs[Output 0].Columns[ID]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\dimension_customer\Script Component.Outputs[Output 0].Columns[ID]"
                      name="ID" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_customer\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dimension_customer\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_customer\Sort.Inputs[Sort Input].Columns[Customer_Age]"
                      cachedDataType="r8"
                      cachedName="Customer_Age"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Age]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_customer\Sort.Inputs[Sort Input].Columns[Age_Group]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Age_Group"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Age_Group]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_customer\Sort.Inputs[Sort Input].Columns[Customer_Gender]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Customer_Gender"
                      lineageId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Gender]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_customer\Sort.Inputs[Sort Input].Columns[Copy of Customer_Gender]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1"
                      cachedName="Copy of Customer_Gender"
                      lineageId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Customer_Gender]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_customer\Sort.Inputs[Sort Input].Columns[Copy of Age_Group]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="25"
                      cachedName="Copy of Age_Group"
                      lineageId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Age_Group]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_customer\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Customer_Age]"
                      dataType="r8"
                      lineageId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Customer_Age]"
                      name="Customer_Age"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Age]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Age_Group]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Age_Group]"
                      name="Age_Group">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Age_Group]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Customer_Gender]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Customer_Gender]"
                      name="Customer_Gender"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_customer\Excel Source.Outputs[Excel Source Output].Columns[Customer_Gender]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Copy of Customer_Gender]"
                      codePage="1252"
                      dataType="str"
                      length="1"
                      lineageId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Copy of Customer_Gender]"
                      name="Copy of Customer_Gender">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Customer_Gender]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Copy of Age_Group]"
                      codePage="1252"
                      dataType="str"
                      length="25"
                      lineageId="Package\dimension_customer\Sort.Outputs[Sort Output].Columns[Copy of Age_Group]"
                      name="Copy of Age_Group">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Age_Group]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\dimension_customer.Paths[Data Conversion Output]"
              endId="Package\dimension_customer\Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\dimension_customer\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\dimension_customer.Paths[Excel Source Output]"
              endId="Package\dimension_customer\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\dimension_customer\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\dimension_customer.Paths[Output 0]"
              endId="Package\dimension_customer\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\dimension_customer\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\dimension_customer.Paths[Sort Output]"
              endId="Package\dimension_customer\Script Component.Inputs[Input 0]"
              name="Sort Output"
              startId="Package\dimension_customer\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\dimension_product"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{663cfb81-3b98-4d4e-9250-f5cd6a7b118d}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="dimension_product"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\dimension_product\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dimension_product\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_product\Data Conversion.Inputs[Data Conversion Input].Columns[Product]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Product"
                      lineageId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].Columns[Product]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\dimension_product\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product]"
                      name="Copy of Product"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\dimension_product\Excel Source.Outputs[Excel Source Output].Columns[Product]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\dimension_product\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_product\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sales$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_product\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].Columns[Product]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product]"
                      length="255"
                      lineageId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].Columns[Product]"
                      name="Product"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                      dataType="date"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Day]"
                      dataType="r8"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                      dataType="wstr"
                      length="255"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                      dataType="r8"
                      name="Year" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Age]"
                      dataType="r8"
                      name="Customer_Age" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Age_Group]"
                      dataType="wstr"
                      length="255"
                      name="Age_Group" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Gender]"
                      dataType="wstr"
                      length="255"
                      name="Customer_Gender" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country]"
                      dataType="wstr"
                      length="255"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[State]"
                      dataType="wstr"
                      length="255"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product_Category]"
                      dataType="wstr"
                      length="255"
                      name="Product_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sub_Category]"
                      dataType="wstr"
                      length="255"
                      name="Sub_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product]"
                      dataType="wstr"
                      length="255"
                      name="Product" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Order_Quantity]"
                      dataType="r8"
                      name="Order_Quantity" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Cost]"
                      dataType="r8"
                      name="Unit_Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Price]"
                      dataType="r8"
                      name="Unit_Price" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Profit]"
                      dataType="r8"
                      name="Profit" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cost]"
                      dataType="r8"
                      name="Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].ExternalColumns[Revenue]"
                      dataType="r8"
                      name="Revenue" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\dimension_product\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_product\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_product\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\dimension_product\Excel Source.Outputs[Excel Source Error Output].Columns[Product]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_product\Excel Source.Outputs[Excel Source Error Output].Columns[Product]"
                      name="Product" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_product\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DIM_PRODUCT]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_product\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dimension_product\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_product\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID"
                      externalMetadataColumnId="Package\dimension_product\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_PRODUCT]"
                      lineageId="Package\dimension_product\Script Component.Outputs[Output 0].Columns[ID]" />
                    <inputColumn
                      refId="Package\dimension_product\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Product]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of Product"
                      externalMetadataColumnId="Package\dimension_product\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PRODUCT_NAME]"
                      lineageId="Package\dimension_product\Sort.Outputs[Sort Output].Columns[Copy of Product]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_product\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_PRODUCT]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="ID_PRODUCT" />
                    <externalMetadataColumn
                      refId="Package\dimension_product\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PRODUCT_NAME]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="PRODUCT_NAME" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_product\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\dimension_product\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_product\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_product\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_product\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_product\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_product\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    /// 

    int i = 1;
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ID = (i < 10)? "P0" + i : "P" + i;
        i++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e30ca94f4824886866fc46a5821cb99.Properties.Settings.get_Default():SC_3e30ca94f4824886866fc46a5821cb99.Properties.Sett" +
    "ings")]

namespace SC_3e30ca94f4824886866fc46a5821cb99.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_3e30ca94f4824886866fc46a5821cb99.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{ed4c55f5-2ad8-430c-ab74-dda8e1eddcf4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_3e30ca94f4824886866fc46a5821cb99</RootNamespace>
    <AssemblyName>SC_3e30ca94f4824886866fc46a5821cb99</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_3e30ca94f4824886866fc46a5821cb99" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_3e30ca94f4824886866fc46a5821cb99</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_3e30ca94f4824886866fc46a5821cb99</msb:DisplayName>
    <msb:ProjectId>{83BE17F4-1C80-4E43-9CF3-B71B7AA76453}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_3e30ca94f4824886866fc46a5821cb99.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_3e30ca94f4824886866fc46a5821cb99")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_3e30ca94f4824886866fc46a5821cb99")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e30ca94f4824886866fc46a5821cb99.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e30ca94f4824886866fc46a5821cb99.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_3e30ca94f4824886866fc46a5821cb99.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_3e30ca94f4824886866fc46a5821cb99.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_3e30ca94f4824886866fc46a5821cb99.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_3e30ca94f4824886866fc46a5821cb99.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAFueaGMAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAbjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABwxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
MQAAAAAAAEgAAAACAAUA2CEAAIwOAAABAAAAAAAAAGQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMASwAAAAAAAAADAnsBAAAE
HwoyF3IBAABwAnwBAAAEKBIAAAooEwAACisVcgUAAHACfAEAAAQoEgAACigTAAAKbwYAAAYCAnsB
AAAEF1h9AQAABCo6Ahd9AQAABAIoCgAABioqAgMEBSgUAAAKKiYCFgMoFQAACipaAywIAhYoFgAA
CipyCwAAcHMXAAAKeh4CKBgAAAoqHgIoGQAACip+AigaAAAKAgJzDgAABn0CAAAEAgJzDwAABn0D
AAAEKpIEcqgAAHAabxsAAAosFQIFAgMoHAAACg4EcwUAAAZvDAAABipKKwcCA28NAAAGA28IAAAG
LfEqBio6AigdAAAKAgN9BAAABCo6AigdAAAKAgN9BQAABCoeAigdAAAKKq5+BgAABC0ecrgAAHDQ
BwAAAigeAAAKbx8AAApzIAAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKCEA
AAoqLnMVAAAGgAgAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAMAUAACN+
AACcBQAAGAYAACNTdHJpbmdzAAAAALQLAAAsAQAAI1VTAOAMAAAQAAAAI0dVSUQAAADwDAAAnAEA
ACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAAACAAAAAIAAAACAAAABYAAAAPAAAA
IQAAABAAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAPsCAQAAAAAABgDxAUgEBgCFAkgEBgA9
ATUEDwC8BAAABgBqAYoDBgDUAYoDBgC1AYoDBgBsAooDBgARAooDBgAqAooDBgCBAYoDBgCcAcAC
CgBFAooACgAHBIoADgD4A4oACgDTA4oACgCJBYoABgBMBUIDBgAgATUEBgAYBGgEBgDHA3UDEgDw
AOUCEgBRAeUCEgDYAGADBgAFAUgEBgABAEIDBgDcAkIDBgCcA0IDBgC2A0IDBgCrAEIDBgBcAEID
BgAOBooDAAAAACsAAAAAAAEAAQABABAAVQMAABAAAQABAAEAEADrAwAAOQACAAUAAQAQAGsFAABF
AAIACgABABAAOQUAAEkABAAOAAEAEAD6BAAASQAFAA8AAAAQAG8EywRJAAYAEAAAARAAKQXLBGEA
CAAUAAEA4wJtAAYAOQVwAAYA+gR0AAEAeQV4AAEAeQV4ABEASQN8ABEAyACAABEATACEAFAgAAAA
AMYAowIGAAEAWCAAAAAAxgCuAgYAAQBgIAAAAADGAOsFiAABALcgAAAAAIYYKAQGAAIAxiAAAAAA
hhgoBCUAAgDRIAAAAACGCDQAEAAFANsgAAAAAIYIIwOOAAYA8iAAAAAAhgACBjUABwD6IAAAAACG
AFMFNQAHAAIhAAAAAIYYKAQGAAcAIiEAAAAAxgDeBZMABwBHIQAAAADGAdcFiAALAFohAAAAAMYB
6wWIAAwAXCEAAAAAhhgoBJ0ADQBrIQAAAACGGCgEnQAOAHohAAAAAIMYKAQGAA8AgiEAAAAAkwgU
BKMADwCuIQAAAACTCLAAqAAPALUhAAAAAJMIvACtAA8AvSEAAAAAlghfBbMAEADEIQAAAACGGCgE
BgAQAMwhAAAAAJEYLgS4ABAAAAABAAYGAAABAA0EAAACAAQFAAADAOEDAAABALoCAAABALoCAAAB
ADsAAAACAIAAAAADAA0EAAAEAOEDAAABAA0EAAABAAYGAAABAI8FAAABAI8FAAABALoCCQAoBAEA
EQAoBAYAGQAoBAoAKQAoBBAAMQAoBBAAOQAoBBAAQQAoBBAASQAoBBAAUQAoBBAAWQAoBBAAYQAo
BBAAaQAoBAYAmQAoBAYAuQAoBBUAyQAoBAYAiQCjAgYAiQCuAgYA0QDaAhsA2QBFBR8AcQAoBCUA
cQA5Ay8AcQAxAwEA4QAoBBAAcQACBjUAcQBTBTUAiQAoBAYA2QAyBTkAiQAYBUAAkQAoBAYA8QBu
AEYA8QAKBk0AoQAoBFMAwQAoBAYALgALANMALgATANwALgAbAPsALgAjAAQBLgArAC0BLgAzAC0B
LgA7AC0BLgBDAAQBLgBLADMBLgBTAC0BLgBbAEoBQwBjAJQBaQBzAPsAiQBzAPsA4wBrAJQBAQF7
AJQBAwABAAcAAwAIAAUAAABAALwAAAAnA8AAAAAYBMQAAADQAMkAAABjBc4AAQAGAAMAAQAHAAUA
AgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEAAAAAAAAAAAAAAAAABwAAAAQAAAAAAAAAAAAA
AFsAQwAAAAAADwAAAAAAAAAAAAAAZACZBQAAAAAPAAAAAAAAAAAAAABkALYFAAAAAAQAAAAAAAAA
AAAAAFsAQgMAAAAAAAAAAAEAAAB5BAAAAAAASW50MzIAU0NfM2UzMGNhOTRmNDgyNDg4Njg2NmZj
NDZhNTgyMWNiOTkAPE1vZHVsZT4Ac2V0X0lEAElucHV0SUQAbXNjb3JsaWIAZGVmYXVsdEluc3Rh
bmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAaQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfM2UzMGNh
OTRmNDgyNDg4Njg2NmZjNDZhNTgyMWNiOTkuZGxsAHNldF9JRF9Jc051bGwAU2V0TnVsbABzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhj
ZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRN
YXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzNlMzBjYTk0ZjQ4MjQ4ODY4NjZmYzQ2
YTU4MjFjYjk5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
Q18zZTMwY2E5NGY0ODI0ODg2ODY2ZmM0NmE1ODIxY2I5OS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBC
dWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5l
Y3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1
dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAA1AAAAVQADAA
AICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMA
ZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAA
MAAAcVMAQwBfADMAZQAzADAAYwBhADkANABmADQAOAAyADQAOAA4ADYAOAA2ADYAZgBjADQANgBh
ADUAOAAyADEAYwBiADkAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAAB9FxAOpEqkSI8dute8pOVJAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZAyAADgUAAg4O
DgkgAwESPR0IEkEFIAIBCBwDIAACBiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3
elxWGTTgiQiJhF3NgIDMkQIGCAMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAE
AQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygAAgQIABJRBAgAElUE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfM2UzMGNhOTRmNDgyNDg4Njg2NmZjNDZhNTgyMWNiOTkAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABEMQAAAAAAAAAA
AABeMQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUDEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AMwBlADMAMABjAGEAOQA0AGYANAA4ADIANAA4ADgANgA4ADYANgBmAGMANAA2AGEA
NQA4ADIAMQBjAGIAOQA5AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAzAGUAMwAwAGMA
YQA5ADQAZgA0ADgAMgA0ADgAOAA2ADgANgA2AGYAYwA0ADYAYQA1ADgAMgAxAGMAYgA5ADkALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADMA
ZQAzADAAYwBhADkANABmADQAOAAyADQAOAA4ADYAOAA2ADYAZgBjADQANgBhADUAOAAyADEAYwBi
ADkAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwAzAGUA
MwAwAGMAYQA5ADQAZgA0ADgAMgA0ADgAOAA2ADgANgA2AGYAYwA0ADYAYQA1ADgAMgAxAGMAYgA5
ADkAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_3e30ca94f4824886866fc46a5821cb99</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">45</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dimension_product\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_product\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\dimension_product\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_product\Script Component.Outputs[Output 0].Columns[ID]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\dimension_product\Script Component.Outputs[Output 0].Columns[ID]"
                      name="ID" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_product\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dimension_product\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_product\Sort.Inputs[Sort Input].Columns[Product]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Product"
                      lineageId="Package\dimension_product\Excel Source.Outputs[Excel Source Output].Columns[Product]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_product\Sort.Inputs[Sort Input].Columns[Copy of Product]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of Product"
                      lineageId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_product\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_product\Sort.Outputs[Sort Output].Columns[Product]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_product\Sort.Outputs[Sort Output].Columns[Product]"
                      name="Product"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_product\Excel Source.Outputs[Excel Source Output].Columns[Product]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_product\Sort.Outputs[Sort Output].Columns[Copy of Product]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\dimension_product\Sort.Outputs[Sort Output].Columns[Copy of Product]"
                      name="Copy of Product">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_product\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\dimension_product.Paths[Data Conversion Output]"
              endId="Package\dimension_product\Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\dimension_product\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\dimension_product.Paths[Excel Source Output]"
              endId="Package\dimension_product\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\dimension_product\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\dimension_product.Paths[Output 0]"
              endId="Package\dimension_product\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\dimension_product\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\dimension_product.Paths[Sort Output]"
              endId="Package\dimension_product\Script Component.Inputs[Input 0]"
              name="Sort Output"
              startId="Package\dimension_product\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\dimension_region"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{F348E1E9-9EAB-4062-97D8-78F3E7395676}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="dimension_region"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\dimension_region\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dimension_region\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_region\Data Conversion.Inputs[Data Conversion Input].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[Country]" />
                    <inputColumn
                      refId="Package\dimension_region\Data Conversion.Inputs[Data Conversion Input].Columns[State]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="State"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[State]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\dimension_region\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Country]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Country]"
                      name="Copy of Country"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[Country]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of State]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of State]"
                      name="Copy of State"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[State]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\dimension_region\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_region\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sales$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_region\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[Country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country]"
                      length="255"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[State]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[State]"
                      length="255"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[State]"
                      name="State"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                      dataType="date"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Day]"
                      dataType="r8"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                      dataType="wstr"
                      length="255"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                      dataType="r8"
                      name="Year" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Age]"
                      dataType="r8"
                      name="Customer_Age" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Age_Group]"
                      dataType="wstr"
                      length="255"
                      name="Age_Group" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Gender]"
                      dataType="wstr"
                      length="255"
                      name="Customer_Gender" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country]"
                      dataType="wstr"
                      length="255"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[State]"
                      dataType="wstr"
                      length="255"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product_Category]"
                      dataType="wstr"
                      length="255"
                      name="Product_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sub_Category]"
                      dataType="wstr"
                      length="255"
                      name="Sub_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product]"
                      dataType="wstr"
                      length="255"
                      name="Product" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Order_Quantity]"
                      dataType="r8"
                      name="Order_Quantity" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Cost]"
                      dataType="r8"
                      name="Unit_Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Price]"
                      dataType="r8"
                      name="Unit_Price" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Profit]"
                      dataType="r8"
                      name="Profit" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cost]"
                      dataType="r8"
                      name="Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].ExternalColumns[Revenue]"
                      dataType="r8"
                      name="Revenue" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\dimension_region\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Error Output].Columns[Country]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Error Output].Columns[Country]"
                      name="Country" />
                    <outputColumn
                      refId="Package\dimension_region\Excel Source.Outputs[Excel Source Error Output].Columns[State]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Error Output].Columns[State]"
                      name="State" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_region\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DIM_REGION]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_region\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID"
                      externalMetadataColumnId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_REG]"
                      lineageId="Package\dimension_region\Script Component.Outputs[Output 0].Columns[ID]" />
                    <inputColumn
                      refId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Country]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of Country"
                      externalMetadataColumnId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[COUNTRY]"
                      lineageId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[Copy of Country]" />
                    <inputColumn
                      refId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of State]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of State"
                      externalMetadataColumnId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[STATE]"
                      lineageId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[Copy of State]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_REG]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="ID_REG" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[COUNTRY]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="COUNTRY" />
                    <externalMetadataColumn
                      refId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[STATE]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="STATE" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_region\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_region\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_region\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_region\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_region\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_region\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    int i = 1;
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ID = (i < 10) ? "R0" + i : "R" + i;
        i++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f92623bc0659421c95927c1a07b650b1.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{a536ce9a-11fc-40b0-9169-8c3628990cb7}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_f92623bc0659421c95927c1a07b650b1</RootNamespace>
    <AssemblyName>SC_f92623bc0659421c95927c1a07b650b1</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_f92623bc0659421c95927c1a07b650b1" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f92623bc0659421c95927c1a07b650b1.Properties.Settings.get_Default():SC_f92623bc0659421c95927c1a07b650b1.Properties.Sett" +
    "ings")]

namespace SC_f92623bc0659421c95927c1a07b650b1.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_f92623bc0659421c95927c1a07b650b1</msb:CodeName>
    <msb:DisplayName>SC_f92623bc0659421c95927c1a07b650b1</msb:DisplayName>
    <msb:ProjectId>{E616C8B6-9C40-4B68-BFDC-0CB602839298}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_f92623bc0659421c95927c1a07b650b1.csproj" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f92623bc0659421c95927c1a07b650b1")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f92623bc0659421c95927c1a07b650b1")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f92623bc0659421c95927c1a07b650b1.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f92623bc0659421c95927c1a07b650b1.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_f92623bc0659421c95927c1a07b650b1.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f92623bc0659421c95927c1a07b650b1.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f92623bc0659421c95927c1a07b650b1.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f92623bc0659421c95927c1a07b650b1.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADGfaGMAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAbjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABwxAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
MQAAAAAAAEgAAAACAAUA2CEAAIwOAAABAAAAAAAAAGQwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAMASwAAAAAAAAADAnsBAAAE
HwoyF3IBAABwAnwBAAAEKBIAAAooEwAACisVcgUAAHACfAEAAAQoEgAACigTAAAKbwYAAAYCAnsB
AAAEF1h9AQAABCo6Ahd9AQAABAIoCgAABioqAgMEBSgUAAAKKiYCFgMoFQAACipaAywIAhYoFgAA
CipyCwAAcHMXAAAKeh4CKBgAAAoqHgIoGQAACip+AigaAAAKAgJzDgAABn0CAAAEAgJzDwAABn0D
AAAEKpIEcqgAAHAabxsAAAosFQIFAgMoHAAACg4EcwUAAAZvDAAABipKKwcCA28NAAAGA28IAAAG
LfEqBio6AigdAAAKAgN9BAAABCo6AigdAAAKAgN9BQAABCoeAigdAAAKKq5+BgAABC0ecrgAAHDQ
BwAAAigeAAAKbx8AAApzIAAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKCEA
AAoqLnMVAAAGgAgAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAMAUAACN+
AACcBQAAGAYAACNTdHJpbmdzAAAAALQLAAAsAQAAI1VTAOAMAAAQAAAAI0dVSUQAAADwDAAAnAEA
ACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAAACAAAAAIAAAACAAAABYAAAAPAAAA
IQAAABAAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAPsCAQAAAAAABgDxAUgEBgCFAkgEBgA9
ATUEDwC8BAAABgBqAYoDBgDUAYoDBgC1AYoDBgBsAooDBgARAooDBgAqAooDBgCBAYoDBgCcAcAC
CgBFAooACgAHBIoADgD4A4oACgDTA4oACgCJBYoABgBMBUIDBgAgATUEBgAYBGgEBgDHA3UDEgDw
AOUCEgBRAeUCEgDYAGADBgAFAUgEBgAlAEIDBgDcAkIDBgCcA0IDBgC2A0IDBgCrAEIDBgBcAEID
BgAOBooDAAAAACsAAAAAAAEAAQABABAAVQMAABAAAQABAAEAEADrAwAAOQACAAUAAQAQAGsFAABF
AAIACgABABAAOQUAAEkABAAOAAEAEAD6BAAASQAFAA8AAAAQAG8EywRJAAYAEAAAARAAKQXLBGEA
CAAUAAEA4wJtAAYAOQVwAAYA+gR0AAEAeQV4AAEAeQV4ABEASQN8ABEAyACAABEATACEAFAgAAAA
AMYAowIGAAEAWCAAAAAAxgCuAgYAAQBgIAAAAADGAOsFiAABALcgAAAAAIYYKAQGAAIAxiAAAAAA
hhgoBCUAAgDRIAAAAACGCDQAEAAFANsgAAAAAIYIIwOOAAYA8iAAAAAAhgACBjUABwD6IAAAAACG
AFMFNQAHAAIhAAAAAIYYKAQGAAcAIiEAAAAAxgDeBZMABwBHIQAAAADGAdcFiAALAFohAAAAAMYB
6wWIAAwAXCEAAAAAhhgoBJ0ADQBrIQAAAACGGCgEnQAOAHohAAAAAIMYKAQGAA8AgiEAAAAAkwgU
BKMADwCuIQAAAACTCLAAqAAPALUhAAAAAJMIvACtAA8AvSEAAAAAlghfBbMAEADEIQAAAACGGCgE
BgAQAMwhAAAAAJEYLgS4ABAAAAABAAYGAAABAA0EAAACAAQFAAADAOEDAAABALoCAAABALoCAAAB
ADsAAAACAIAAAAADAA0EAAAEAOEDAAABAA0EAAABAAYGAAABAI8FAAABAI8FAAABALoCCQAoBAEA
EQAoBAYAGQAoBAoAKQAoBBAAMQAoBBAAOQAoBBAAQQAoBBAASQAoBBAAUQAoBBAAWQAoBBAAYQAo
BBAAaQAoBAYAmQAoBAYAuQAoBBUAyQAoBAYAiQCjAgYAiQCuAgYA0QDaAhsA2QBFBR8AcQAoBCUA
cQA5Ay8AcQAxAwEA4QAoBBAAcQACBjUAcQBTBTUAiQAoBAYA2QAyBTkAiQAYBUAAkQAoBAYA8QBu
AEYA8QAKBk0AoQAoBFMAwQAoBAYALgALANMALgATANwALgAbAPsALgAjAAQBLgArAC0BLgAzAC0B
LgA7AC0BLgBDAAQBLgBLADMBLgBTAC0BLgBbAEoBQwBjAJQBaQBzAPsAiQBzAPsA4wBrAJQBAQF7
AJQBAwABAAcAAwAIAAUAAABAALwAAAAnA8AAAAAYBMQAAADQAMkAAABjBc4AAQAGAAMAAQAHAAUA
AgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEAAAAAAAAAAAAAAAAAAQAAAAQAAAAAAAAAAAAA
AFsAQwAAAAAADwAAAAAAAAAAAAAAZACZBQAAAAAPAAAAAAAAAAAAAABkALYFAAAAAAQAAAAAAAAA
AAAAAFsAQgMAAAAAAAAAAAEAAAB5BAAAAAAAU0NfZjkyNjIzYmMwNjU5NDIxYzk1OTI3YzFhMDdi
NjUwYjEASW50MzIAPE1vZHVsZT4Ac2V0X0lEAElucHV0SUQAbXNjb3JsaWIAZGVmYXVsdEluc3Rh
bmNlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElucHV0TmFtZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJl
c291cmNlQ3VsdHVyZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRF
bnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0
aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50
aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcAaQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfZjkyNjIz
YmMwNjU5NDIxYzk1OTI3YzFhMDdiNjUwYjEuZGxsAHNldF9JRF9Jc051bGwAU2V0TnVsbABzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhj
ZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRN
YXAASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VN
YW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29t
cGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2Y5MjYyM2JjMDY1OTQyMWM5NTkyN2Mx
YTA3YjY1MGIxLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBT
Q19mOTI2MjNiYzA2NTk0MjFjOTU5MjdjMWEwN2I2NTBiMS5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBC
dWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5l
Y3Rpb25zAENvbmNhdABPYmplY3QARW5kT2ZSb3dzZXQAZ2V0X0RlZmF1bHQAVXNlckNvbXBvbmVu
dABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhT
Y3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1
dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AAAAA1IAAAVSADAA
AICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMA
ZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAA
MAAAcVMAQwBfAGYAOQAyADYAMgAzAGIAYwAwADYANQA5ADQAMgAxAGMAOQA1ADkAMgA3AGMAMQBh
ADAANwBiADYANQAwAGIAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAAAz2j7DXgduQqrnQq26l1OsAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFZAyAADgUAAg4O
DgkgAwESPR0IEkEFIAIBCBwDIAACBiACAg4RdQUgAR0ICAYAARJ5EX0FIAASgIEHIAIBDhKAgQi3
elxWGTTgiQiJhF3NgIDMkQIGCAMGEhQDBhIYAwYSRQMGElEDBhJVAwYSIAUgAQESDAQgAQECCSAE
AQgOEj0SQQUgAQESRQQAABJRBAAAElUFAAEBElUEAAASIAMAAAEDKAAOAygAAgQIABJRBAgAElUE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfZjkyNjIzYmMwNjU5NDIxYzk1OTI3YzFhMDdiNjUwYjEAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABEMQAAAAAAAAAA
AABeMQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUDEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZgA5ADIANgAyADMAYgBjADAANgA1ADkANAAyADEAYwA5ADUAOQAyADcAYwAxAGEA
MAA3AGIANgA1ADAAYgAxAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmADkAMgA2ADIA
MwBiAGMAMAA2ADUAOQA0ADIAMQBjADkANQA5ADIANwBjADEAYQAwADcAYgA2ADUAMABiADEALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYA
OQAyADYAMgAzAGIAYwAwADYANQA5ADQAMgAxAGMAOQA1ADkAMgA3AGMAMQBhADAANwBiADYANQAw
AGIAMQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmADkA
MgA2ADIAMwBiAGMAMAA2ADUAOQA0ADIAMQBjADkANQA5ADIANwBjADEAYQAwADcAYgA2ADUAMABi
ADEAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAHAxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f92623bc0659421c95927c1a07b650b1</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">45</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dimension_region\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_region\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\dimension_region\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_region\Script Component.Outputs[Output 0].Columns[ID]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\dimension_region\Script Component.Outputs[Output 0].Columns[ID]"
                      name="ID" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_region\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dimension_region\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_region\Sort.Inputs[Sort Input].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[Country]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_region\Sort.Inputs[Sort Input].Columns[State]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="State"
                      lineageId="Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[State]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_region\Sort.Inputs[Sort Input].Columns[Copy of Country]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of Country"
                      lineageId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Country]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_region\Sort.Inputs[Sort Input].Columns[Copy of State]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of State"
                      lineageId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of State]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_region\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[Country]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[Country]"
                      name="Country"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[Country]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[State]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[State]"
                      name="State"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_region\Excel Source.Outputs[Excel Source Output].Columns[State]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[Copy of Country]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[Copy of Country]"
                      name="Copy of Country">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_region\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Country]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[Copy of State]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\dimension_region\Sort.Outputs[Sort Output].Columns[Copy of State]"
                      name="Copy of State">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_region\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of State]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\dimension_region.Paths[Data Conversion Output]"
              endId="Package\dimension_region\Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\dimension_region\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\dimension_region.Paths[Excel Source Output]"
              endId="Package\dimension_region\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\dimension_region\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\dimension_region.Paths[Output 0]"
              endId="Package\dimension_region\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\dimension_region\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\dimension_region.Paths[Sort Output]"
              endId="Package\dimension_region\Script Component.Inputs[Input 0]"
              name="Sort Output"
              startId="Package\dimension_region\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\dimension_time"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:Disabled="True"
      DTS:DTSID="{BDFFFC13-C078-43D1-9DCC-4A5A91B9030C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="dimension_time"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\dimension_time\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\dimension_time\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_time\Data Conversion.Inputs[Data Conversion Input].Columns[Month]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Month"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Month]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\dimension_time\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Month]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Month]"
                      name="Copy of Month"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Month]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\dimension_time\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_time\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sales$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_time\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Day]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Day]"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Day]"
                      name="Day"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                      length="255"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                      name="Month"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Year]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Year]"
                      name="Year"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                      dataType="date"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Day]"
                      dataType="r8"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                      dataType="wstr"
                      length="255"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                      dataType="r8"
                      name="Year" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Age]"
                      dataType="r8"
                      name="Customer_Age" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Age_Group]"
                      dataType="wstr"
                      length="255"
                      name="Age_Group" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Gender]"
                      dataType="wstr"
                      length="255"
                      name="Customer_Gender" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country]"
                      dataType="wstr"
                      length="255"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[State]"
                      dataType="wstr"
                      length="255"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product_Category]"
                      dataType="wstr"
                      length="255"
                      name="Product_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sub_Category]"
                      dataType="wstr"
                      length="255"
                      name="Sub_Category" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product]"
                      dataType="wstr"
                      length="255"
                      name="Product" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Order_Quantity]"
                      dataType="r8"
                      name="Order_Quantity" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Cost]"
                      dataType="r8"
                      name="Unit_Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Price]"
                      dataType="r8"
                      name="Unit_Price" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Profit]"
                      dataType="r8"
                      name="Profit" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cost]"
                      dataType="r8"
                      name="Cost" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].ExternalColumns[Revenue]"
                      dataType="r8"
                      name="Revenue" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                      dataType="date"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[Day]"
                      dataType="r8"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[Day]"
                      name="Day" />
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[Month]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[Month]"
                      name="Month" />
                    <outputColumn
                      refId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[Year]"
                      dataType="r8"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Error Output].Columns[Year]"
                      name="Year" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_time\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[DIM_TIME]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\dimension_time\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date]"
                      cachedDataType="date"
                      cachedName="Date"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      lineageId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Date]" />
                    <inputColumn
                      refId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Day]"
                      cachedDataType="r8"
                      cachedName="Day"
                      externalMetadataColumnId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      lineageId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Day]" />
                    <inputColumn
                      refId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Month]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of Month"
                      externalMetadataColumnId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                      lineageId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Copy of Month]" />
                    <inputColumn
                      refId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Year]"
                      cachedDataType="r8"
                      cachedName="Year"
                      externalMetadataColumnId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Year]"
                      lineageId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Year]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                      dataType="dbDate"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Day]"
                      dataType="i4"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Year]"
                      dataType="i4"
                      name="Year" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_time\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_time\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\dimension_time\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\dimension_time\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\dimension_time\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\dimension_time\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\dimension_time\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\dimension_time\Sort.Inputs[Sort Input].Columns[Date]"
                      cachedDataType="date"
                      cachedName="Date"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Date]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_time\Sort.Inputs[Sort Input].Columns[Day]"
                      cachedDataType="r8"
                      cachedName="Day"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Day]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_time\Sort.Inputs[Sort Input].Columns[Month]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Month"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Month]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_time\Sort.Inputs[Sort Input].Columns[Year]"
                      cachedDataType="r8"
                      cachedName="Year"
                      lineageId="Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Year]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\dimension_time\Sort.Inputs[Sort Input].Columns[Copy of Month]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of Month"
                      lineageId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Month]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\dimension_time\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Date]"
                      dataType="date"
                      lineageId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Date]"
                      name="Date"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Day]"
                      dataType="r8"
                      lineageId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Day]"
                      name="Day">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Day]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Month]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Month]"
                      name="Month">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Month]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Year]"
                      dataType="r8"
                      lineageId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Year]"
                      name="Year">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_time\Excel Source.Outputs[Excel Source Output].Columns[Year]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Copy of Month]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\dimension_time\Sort.Outputs[Sort Output].Columns[Copy of Month]"
                      name="Copy of Month">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\dimension_time\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Month]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\dimension_time.Paths[Data Conversion Output]"
              endId="Package\dimension_time\Sort.Inputs[Sort Input]"
              name="Data Conversion Output"
              startId="Package\dimension_time\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\dimension_time.Paths[Excel Source Output]"
              endId="Package\dimension_time\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\dimension_time\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\dimension_time.Paths[Sort Output]"
              endId="Package\dimension_time\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Sort Output"
              startId="Package\dimension_time\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\fact table"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{5673E811-9571-4E73-87EE-CFC3A1DAC65C}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="fact table"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\fact table\Aggregate"
              componentClassID="Microsoft.Aggregate"
              contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
              description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
              name="Aggregate"
              version="3">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                  name="KeyScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                  name="Keys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                  name="CountDistinctScale"
                  typeConverter="KeyScaleType">0</property>
                <property
                  dataType="System.Null"
                  description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                  name="CountDistinctKeys" />
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                  name="AutoExtendFactor">25</property>
              </properties>
              <inputs>
                <input
                  refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1]"
                  name="Aggregate Input 1">
                  <inputColumns>
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[Order_Quantity]"
                      cachedDataType="r8"
                      cachedName="Order_Quantity"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Order_Quantity]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[Unit_Cost]"
                      cachedDataType="r8"
                      cachedName="Unit_Cost"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Unit_Cost]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[Profit]"
                      cachedDataType="r8"
                      cachedName="Profit"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Profit]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[Cost]"
                      cachedDataType="r8"
                      cachedName="Cost"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Cost]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[Revenue]"
                      cachedDataType="r8"
                      cachedName="Revenue"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Revenue]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[ID_CUST]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_CUST"
                      lineageId="Package\fact table\Customer.Outputs[Lookup Match Output].Columns[ID_CUST]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[ID_REG]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_REG"
                      lineageId="Package\fact table\Region.Outputs[Lookup Match Output].Columns[ID_REG]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[ID_CATEGORY]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_CATEGORY"
                      lineageId="Package\fact table\Category.Outputs[Lookup Match Output].Columns[ID_CATEGORY]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[ID_PRODUCT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_PRODUCT"
                      lineageId="Package\fact table\Product.Outputs[Lookup Match Output].Columns[ID_PRODUCT]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[Date DB]"
                      cachedDataType="dbDate"
                      cachedName="Date DB"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Date DB]" />
                    <inputColumn
                      refId="Package\fact table\Aggregate.Inputs[Aggregate Input 1].Columns[Unit_Price]"
                      cachedDataType="r8"
                      cachedName="Unit_Price"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Unit_Price]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1]"
                  name="Aggregate Output 1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                  </properties>
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Order_Quantity]"
                      dataType="r8"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Order_Quantity]"
                      name="Order_Quantity">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Order_Quantity]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Unit_Cost]"
                      dataType="r8"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Unit_Cost]"
                      name="Unit_Cost">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Unit_Cost]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Profit]"
                      dataType="r8"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Profit]"
                      name="Profit">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Profit]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Cost]"
                      dataType="r8"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Cost]"
                      name="Cost">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Cost]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Revenue]"
                      dataType="r8"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Revenue]"
                      name="Revenue">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Revenue]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_CUST]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_CUST]"
                      name="ID_CUST">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Customer.Outputs[Lookup Match Output].Columns[ID_CUST]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_REG]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_REG]"
                      name="ID_REG">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Region.Outputs[Lookup Match Output].Columns[ID_REG]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_CATEGORY]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_CATEGORY]"
                      name="ID_CATEGORY">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Category.Outputs[Lookup Match Output].Columns[ID_CATEGORY]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_PRODUCT]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_PRODUCT]"
                      name="ID_PRODUCT">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Product.Outputs[Lookup Match Output].Columns[ID_PRODUCT]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Date DB]"
                      dataType="dbDate"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Date DB]"
                      name="Date DB">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Date DB]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">0</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Unit_Price]"
                      dataType="r8"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Unit_Price]"
                      name="Unit_Price">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the ID of the input column used in the aggregation."
                          name="AggregationColumnId">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Unit_Price]}</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the type of aggregation."
                          name="AggregationType"
                          typeConverter="AggregationType">4</property>
                        <property
                          dataType="System.Int32"
                          description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                          name="IsBig">1</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the string comparison options."
                          name="AggregationComparisonFlags">0</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\Category"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Category"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[DIM_CATEGORY]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[DIM_CATEGORY]) [refTable]
where [refTable].[SUB_CATEGORY] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID_CATEGORY" dataType="DT_STR" length="5" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PRODUCT_CATEGORY" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="SUB_CATEGORY" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Sub Category]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\fact table\Category.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\fact table\Category.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\fact table\Category.Inputs[Lookup Input].Columns[Sub Category]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Sub Category"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Sub Category]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">SUB_CATEGORY</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\Category.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\fact table\Category.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Category.Outputs[Lookup Match Output].Columns[ID_CATEGORY]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="5"
                      lineageId="Package\fact table\Category.Outputs[Lookup Match Output].Columns[ID_CATEGORY]"
                      name="ID_CATEGORY"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ID_CATEGORY</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Category.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\fact table\Category.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Category.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\fact table\Category.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\fact table\Category.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\fact table\Category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\fact table\Category.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\Customer"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Customer"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[DIM_CUSTOMER]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[DIM_CUSTOMER]) [refTable]
where [refTable].[CUST_AGE] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID_CUST" dataType="DT_STR" length="5" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CUST_AGE" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="AGE_GROUP" dataType="DT_STR" length="25" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CUST_GENDER" dataType="DT_STR" length="1" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Customer Age]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\fact table\Customer.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\fact table\Customer.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\fact table\Customer.Inputs[Lookup Input].Columns[Customer Age]"
                      cachedDataType="i4"
                      cachedName="Customer Age"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Customer Age]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CUST_AGE</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\Customer.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\fact table\Customer.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Customer.Outputs[Lookup Match Output].Columns[ID_CUST]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="5"
                      lineageId="Package\fact table\Customer.Outputs[Lookup Match Output].Columns[ID_CUST]"
                      name="ID_CUST"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ID_CUST</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Customer.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\fact table\Customer.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Customer.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\fact table\Customer.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Customer.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\fact table\Customer.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\fact table\Customer.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\fact table\Customer.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\Data Conversion"
              componentClassID="Microsoft.DataConvert"
              contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Data Conversion"
              name="Data Conversion"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\fact table\Data Conversion.Inputs[Data Conversion Input]"
                  name="Data Conversion Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\fact table\Data Conversion.Inputs[Data Conversion Input].Columns[Date]"
                      cachedDataType="date"
                      cachedName="Date"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Date]" />
                    <inputColumn
                      refId="Package\fact table\Data Conversion.Inputs[Data Conversion Input].Columns[Customer_Age]"
                      cachedDataType="r8"
                      cachedName="Customer_Age"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Customer_Age]" />
                    <inputColumn
                      refId="Package\fact table\Data Conversion.Inputs[Data Conversion Input].Columns[Country]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Country"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Country]" />
                    <inputColumn
                      refId="Package\fact table\Data Conversion.Inputs[Data Conversion Input].Columns[Sub_Category]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Sub_Category"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]" />
                    <inputColumn
                      refId="Package\fact table\Data Conversion.Inputs[Data Conversion Input].Columns[Product]"
                      cachedDataType="wstr"
                      cachedLength="255"
                      cachedName="Product"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Product]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\Data Conversion.Outputs[Data Conversion Output]"
                  exclusionGroup="1"
                  name="Data Conversion Output"
                  synchronousInputId="Package\fact table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Date DB]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Date DB]"
                      name="Date DB"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Date]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Customer Age]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Customer Age]"
                      name="Customer Age"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Customer_Age]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Country]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Country]"
                      name="Copy of Country"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Country]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Sub Category]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Sub Category]"
                      name="Sub Category"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product]"
                      name="Copy of Product"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the input column used as the source of data for the conversion."
                          name="SourceInputColumnLineageID">#{Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Product]}</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Data Conversion.Outputs[Data Conversion Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Data Conversion Error Output"
                  synchronousInputId="Package\fact table\Data Conversion.Inputs[Data Conversion Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\fact table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\Date"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Date"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[DIM_TIME]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[DIM_TIME]) [refTable]
where [refTable].[Date] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="Date" dataType="DT_DBDATE" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Day" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Month" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Year" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Date DB]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\fact table\Date.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\fact table\Date.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\fact table\Date.Inputs[Lookup Input].Columns[Date DB]"
                      cachedDataType="dbDate"
                      cachedName="Date DB"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Date DB]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">Date</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\Date.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\fact table\Date.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Date.Outputs[Lookup Match Output].Columns[Date]"
                      dataType="dbDate"
                      errorOrTruncationOperation="Copy Column"
                      lineageId="Package\fact table\Date.Outputs[Lookup Match Output].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">Date</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Date.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\fact table\Date.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Date.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\fact table\Date.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Date.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\fact table\Date.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\fact table\Date.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\fact table\Date.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\Excel Source"
              componentClassID="Microsoft.ExcelSource"
              contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Excel Source"
              name="Excel Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">Sales$</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="The variable that contains the SQL command to be executed."
                  name="SqlCommandVariable"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.String"
                  description="The mapping from parameters in the SQL command to variables."
                  name="ParameterMapping"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\fact table\Excel Source.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\fact table\Excel Source.Outputs[Excel Source Output]"
                  name="Excel Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Date]"
                      name="Date"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Day]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Day]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Day]"
                      name="Day"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                      name="Month"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Year]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Year]"
                      name="Year"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Customer_Age]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Age]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Customer_Age]"
                      name="Customer_Age"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Age_Group]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Age_Group]"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Age_Group]"
                      name="Age_Group"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Customer_Gender]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Gender]"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Customer_Gender]"
                      name="Customer_Gender"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Country]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country]"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Country]"
                      name="Country"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[State]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[State]"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[State]"
                      name="State"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Product_Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product_Category]"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Product_Category]"
                      name="Product_Category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sub_Category]"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Sub_Category]"
                      name="Sub_Category"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Product]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product]"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Product]"
                      name="Product"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Order_Quantity]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Order_Quantity]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Order_Quantity]"
                      name="Order_Quantity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Unit_Cost]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Cost]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Unit_Cost]"
                      name="Unit_Cost"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Unit_Price]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Price]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Unit_Price]"
                      name="Unit_Price"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Profit]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Profit]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Profit]"
                      name="Profit"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Cost]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cost]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Cost]"
                      name="Cost"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Revenue]"
                      dataType="r8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Revenue]"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Output].Columns[Revenue]"
                      name="Revenue"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Date]"
                      dataType="date"
                      name="Date" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Day]"
                      dataType="r8"
                      name="Day" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Month]"
                      dataType="wstr"
                      length="255"
                      name="Month" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Year]"
                      dataType="r8"
                      name="Year" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Age]"
                      dataType="r8"
                      name="Customer_Age" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Age_Group]"
                      dataType="wstr"
                      length="255"
                      name="Age_Group" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Customer_Gender]"
                      dataType="wstr"
                      length="255"
                      name="Customer_Gender" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Country]"
                      dataType="wstr"
                      length="255"
                      name="Country" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[State]"
                      dataType="wstr"
                      length="255"
                      name="State" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product_Category]"
                      dataType="wstr"
                      length="255"
                      name="Product_Category" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Sub_Category]"
                      dataType="wstr"
                      length="255"
                      name="Sub_Category" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Product]"
                      dataType="wstr"
                      length="255"
                      name="Product" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Order_Quantity]"
                      dataType="r8"
                      name="Order_Quantity" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Cost]"
                      dataType="r8"
                      name="Unit_Cost" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Unit_Price]"
                      dataType="r8"
                      name="Unit_Price" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Profit]"
                      dataType="r8"
                      name="Profit" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Cost]"
                      dataType="r8"
                      name="Cost" />
                    <externalMetadataColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Output].ExternalColumns[Revenue]"
                      dataType="r8"
                      name="Revenue" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output]"
                  isErrorOut="true"
                  name="Excel Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                      dataType="date"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Date]"
                      name="Date" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Day]"
                      dataType="r8"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Day]"
                      name="Day" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Month]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Month]"
                      name="Month" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Year]"
                      dataType="r8"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Year]"
                      name="Year" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Customer_Age]"
                      dataType="r8"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Customer_Age]"
                      name="Customer_Age" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Age_Group]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Age_Group]"
                      name="Age_Group" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Customer_Gender]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Customer_Gender]"
                      name="Customer_Gender" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Country]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Country]"
                      name="Country" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[State]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[State]"
                      name="State" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Product_Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Product_Category]"
                      name="Product_Category" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Sub_Category]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Sub_Category]"
                      name="Sub_Category" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Product]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Product]"
                      name="Product" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Order_Quantity]"
                      dataType="r8"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Order_Quantity]"
                      name="Order_Quantity" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Unit_Cost]"
                      dataType="r8"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Unit_Cost]"
                      name="Unit_Cost" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Unit_Price]"
                      dataType="r8"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Unit_Price]"
                      name="Unit_Price" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Profit]"
                      dataType="r8"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Profit]"
                      name="Profit" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Cost]"
                      dataType="r8"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Cost]"
                      name="Cost" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Revenue]"
                      dataType="r8"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[Revenue]"
                      name="Revenue" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\fact table\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\OLE DB Destination"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="OLE DB Destination"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[FACT_ORDER]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CREATE TABLE [FACT_ORDER2]
(
    [ID_ORDER] INT PRIMARY KEY NOT NULL,
    [ID_CUST] VARCHAR(5) NOT NULL,
    [ID_PRODUCT] VARCHAR(5) NOT NULL,
    [ID_CATEGORY] VARCHAR(5) NOT NULL,
    [ID_REG] VARCHAR(5) NOT NULL,
    [DATE] DATE NOT NULL,
    [ORDER_QTY] INT NOT NULL,
    [UNIT_COST] INT NOT NULL,
    [PROFIT] INT NOT NULL,
    [COST] INT NOT NULL,
    [REVENUE] INT NOT NULL
)</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\fact table\OLE DB Destination.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Unit_Cost]"
                      cachedDataType="r8"
                      cachedName="Unit_Cost"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UNIT_COST]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Unit_Cost]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Profit]"
                      cachedDataType="r8"
                      cachedName="Profit"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PROFIT]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Profit]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Cost]"
                      cachedDataType="r8"
                      cachedName="Cost"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[COST]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Cost]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Revenue]"
                      cachedDataType="r8"
                      cachedName="Revenue"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[REVENUE]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Revenue]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ID_CUST]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_CUST"
                      cachedSortKeyPosition="2"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_CUST]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_CUST]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ID_REG]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_REG"
                      cachedSortKeyPosition="3"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_REG]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_REG]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ID_CATEGORY]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_CATEGORY"
                      cachedSortKeyPosition="5"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_CATEGORY]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_CATEGORY]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ID_PRODUCT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_PRODUCT"
                      cachedSortKeyPosition="4"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_PRODUCT]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_PRODUCT]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ID]"
                      cachedDataType="numeric"
                      cachedName="ID"
                      cachedPrecision="18"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_ORDER]"
                      lineageId="Package\fact table\Script Component.Outputs[Output 0].Columns[ID]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date DB]"
                      cachedDataType="dbDate"
                      cachedName="Date DB"
                      cachedSortKeyPosition="1"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DATE]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Date DB]" />
                    <inputColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Order_Quantity]"
                      cachedDataType="r8"
                      cachedName="Order_Quantity"
                      externalMetadataColumnId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ORDER_QTY]"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Order_Quantity]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_ORDER]"
                      dataType="i4"
                      name="ID_ORDER" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_CUST]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="ID_CUST" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_PRODUCT]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="ID_PRODUCT" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_CATEGORY]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="ID_CATEGORY" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ID_REG]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      name="ID_REG" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DATE]"
                      dataType="dbDate"
                      name="DATE" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ORDER_QTY]"
                      dataType="i4"
                      name="ORDER_QTY" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[UNIT_COST]"
                      dataType="i4"
                      name="UNIT_COST" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PROFIT]"
                      dataType="i4"
                      name="PROFIT" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[COST]"
                      dataType="i4"
                      name="COST" />
                    <externalMetadataColumn
                      refId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[REVENUE]"
                      dataType="i4"
                      name="REVENUE" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\fact table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\fact table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\fact table\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\Product"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Product"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[DIM_PRODUCT]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[DIM_PRODUCT]) [refTable]
where [refTable].[PRODUCT_NAME] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID_PRODUCT" dataType="DT_STR" length="5" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="PRODUCT_NAME" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\fact table\Product.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\fact table\Product.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\fact table\Product.Inputs[Lookup Input].Columns[Copy of Product]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of Product"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Product]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">PRODUCT_NAME</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\Product.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\fact table\Product.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Product.Outputs[Lookup Match Output].Columns[ID_PRODUCT]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="5"
                      lineageId="Package\fact table\Product.Outputs[Lookup Match Output].Columns[ID_PRODUCT]"
                      name="ID_PRODUCT"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ID_PRODUCT</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Product.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\fact table\Product.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Product.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\fact table\Product.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Product.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\fact table\Product.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\fact table\Product.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\fact table\Product.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\Region"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Region"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from [dbo].[DIM_REGION]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">select * from (select * from [dbo].[DIM_REGION]) [refTable]
where [refTable].[COUNTRY] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ID_REG" dataType="DT_STR" length="5" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="COUNTRY" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="STATE" dataType="DT_STR" length="50" precision="0" scale="0" codePage="1252"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Country]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\fact table\Region.Connections[OleDbConnection]"
                  connectionManagerID="{2F644ACE-8DD0-41E7-ACAA-904897064811}:external"
                  connectionManagerRefId="Project.ConnectionManagers[GUSTI_SQLEXPRESS.Demo DW]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\fact table\Region.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\fact table\Region.Inputs[Lookup Input].Columns[Copy of Country]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Copy of Country"
                      lineageId="Package\fact table\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Country]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">COUNTRY</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\Region.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\fact table\Region.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Region.Outputs[Lookup Match Output].Columns[ID_REG]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="5"
                      lineageId="Package\fact table\Region.Outputs[Lookup Match Output].Columns[ID_REG]"
                      name="ID_REG"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ID_REG</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Region.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\fact table\Region.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\fact table\Region.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\fact table\Region.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Region.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\fact table\Region.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\fact table\Region.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\fact table\Region.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    int i = 1;
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Row.ID = i;
        i++;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fff3df89093f4e9491a668647fa460e2.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d61a3efc-9a11-4201-9774-4783a6f3ceeb}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_fff3df89093f4e9491a668647fa460e2</RootNamespace>
    <AssemblyName>SC_fff3df89093f4e9491a668647fa460e2</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_fff3df89093f4e9491a668647fa460e2" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal ID
    {
        set
        {
            this[0] = value;
        }
    }
    public bool ID_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fff3df89093f4e9491a668647fa460e2.Properties.Settings.get_Default():SC_fff3df89093f4e9491a668647fa460e2.Properties.Sett" +
    "ings")]

namespace SC_fff3df89093f4e9491a668647fa460e2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_fff3df89093f4e9491a668647fa460e2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_fff3df89093f4e9491a668647fa460e2</msb:DisplayName>
    <msb:ProjectId>{B3933D20-FD60-49D5-A728-87F4704FCF1D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_fff3df89093f4e9491a668647fa460e2.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_fff3df89093f4e9491a668647fa460e2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_fff3df89093f4e9491a668647fa460e2")]
[assembly: AssemblyCopyright("Copyright @  2022")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fff3df89093f4e9491a668647fa460e2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fff3df89093f4e9491a668647fa460e2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_fff3df89093f4e9491a668647fa460e2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_fff3df89093f4e9491a668647fa460e2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_fff3df89093f4e9491a668647fa460e2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_fff3df89093f4e9491a668647fa460e2.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAJuc2MAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAAMjEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOAwAABPAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAOBEAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAU
MQAAAAAAAEgAAAACAAUAqCEAAIAOAAABAAAAAAAAACgwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiqCAwJ7AQAABCgSAAAKbwYAAAYC
AnsBAAAEF1h9AQAABCo6Ahd9AQAABAIoCgAABioqAgMEBSgTAAAKKjoCFgOMEQAAASgUAAAKKloD
LAgCFigVAAAKKnIBAABwcxYAAAp6HgIoFwAACioeAigYAAAKKn4CKBkAAAoCAnMOAAAGfQIAAAQC
AnMPAAAGfQMAAAQqkgRyngAAcBpvGgAACiwVAgUCAygbAAAKDgRzBQAABm8MAAAGKkorBwIDbw0A
AAYDbwgAAAYt8SoGKjoCKBwAAAoCA30EAAAEKjoCKBwAAAoCA30FAAAEKh4CKBwAAAoqrn4GAAAE
LR5yrgAAcNAHAAACKB0AAApvHgAACnMfAAAKgAYAAAR+BgAABCoafgcAAAQqHgKABwAABCoafggA
AAQqHgIoIAAACioucxUAAAaACAAABCoAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAALAUAACN+AACYBQAAHAYAACNTdHJpbmdzAAAAALQLAAAgAQAAI1VTANQMAAAQAAAAI0dVSUQA
AADkDAAAnAEAACNCbG9iAAAAAAAAAAIAAAFXFaABCQEAAAD6ATMAFgAAAQAAACAAAAAIAAAACAAA
ABYAAAAPAAAAIAAAABAAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAAAAPsCAQAAAAAABgDrAUgE
BgB/AkgEBgA3ATUEDwC8BAAABgBkAYoDBgDOAYoDBgCvAYoDBgBmAooDBgALAooDBgAkAooDBgB7
AYoDBgCWAboCCgA/AoQACgAHBIQADgD4A4QACgDTA4QABgDdAkIDCgCOBYQABgBFBUIDBgAaATUE
BgAYBGgEBgDHA3UDEgDqAOUCEgBLAeUCEgDSAGADBgD/AEgEBgCcA0IDBgDUAkIDBgC2A0IDBgCl
AEIDBgBWAEIDBgATBooDAAAAACUAAAAAAAEAAQABABAAVQMAABAAAQABAAEAEADrAwAAOQACAAUA
AQAQAHAFAABJAAIACgABABAAOQUAAE0ABAAOAAEAEAD6BAAATQAFAA8AAAAQAG8EywRNAAYAEAAA
ARAAKQXLBGUACAAUAAEA2wJpAAYAOQVsAAYA+gRwAAEAfgV0AAEAfgV0ABEASQN4ABEAwgB8ABEA
RgCAAFAgAAAAAMYAnQIGAAEAWCAAAAAAxgCoAgYAAQBgIAAAAADGAPAFhAABAIEgAAAAAIYYKAQG
AAIAkCAAAAAAhhgoBCEAAgCbIAAAAACGCC4AigAFAKogAAAAAIYIIwOQAAYAwSAAAAAAhgAHBjEA
BwDJIAAAAACGAEwFMQAHANEgAAAAAIYYKAQGAAcA8SAAAAAAxgDjBZUABwAWIQAAAADGAdwFhAAL
ACkhAAAAAMYB8AWEAAwAKyEAAAAAhhgoBJ8ADQA6IQAAAACGGCgEnwAOAEkhAAAAAIMYKAQGAA8A
USEAAAAAkwgUBKUADwB9IQAAAACTCKoAqgAPAIQhAAAAAJMItgCvAA8AjCEAAAAAlghkBbUAEACT
IQAAAACGGCgEBgAQAJshAAAAAJEYLgS6ABAAAAABAAsGAAABAA0EAAACAAQFAAADAOEDAAABALQC
AAABALQCAAABADUAAAACAHoAAAADAA0EAAAEAOEDAAABAA0EAAABAAsGAAABAJQFAAABAJQFAAAB
ALQCCQAoBAEAEQAoBAYAGQAoBAoAKQAoBBAAMQAoBBAAOQAoBBAAQQAoBBAASQAoBBAAUQAoBBAA
WQAoBBAAYQAoBBAAaQAoBAYAoQAoBAYAwQAoBBUA0QAoBAYAkQCdAgYAkQCoAgYAiQBYBRsAcQAo
BCEAcQA5AysAcQAxAwEA2QAoBBAAcQAHBjEAcQBMBTEAkQAoBAYA4QAyBTUAkQAYBTwAmQAoBAYA
8QBoAEIA8QAPBkkAqQAoBE8AyQAoBAYALgALANYALgATAN8ALgAbAP4ALgAjAAcBLgArADABLgAz
ADABLgA7ADABLgBDAAcBLgBLADYBLgBTADABLgBbAE0BQwBjAJcBaQBzAP4AiQBzAP4A4wBrAJcB
AQF7AJcBAwABAAcAAwAIAAUAAAA6AL4AAAAnA8MAAAAYBMcAAADKAMwAAABoBdEAAQAGAAMAAQAH
AAUAAgARAAcAAgASAAkAAQATAAkAAgAUAAsABIAAAAEAAAAAAAAAAAAAAAAAAQAAAAQAAAAAAAAA
AAAAAFcAPQAAAAAADwAAAAAAAAAAAAAAYACeBQAAAAAPAAAAAAAAAAAAAABgALsFAAAAAAQAAAAA
AAAAAAAAAFcAQgMAAAAAAAAAAAEAAAB5BAAAAAAAAABTQ19mZmYzZGY4OTA5M2Y0ZTk0OTFhNjY4
NjQ3ZmE0NjBlMgA8TW9kdWxlPgBzZXRfSUQASW5wdXRJRABtc2NvcmxpYgBkZWZhdWx0SW5zdGFu
Y2UAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFR5cGUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAEVkaXRvckJyb3dzYWJsZVN0YXRl
AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUA
RGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRs
ZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRy
aWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25B
dHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RB
dHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVu
dHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRp
YmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRp
bWUuVmVyc2lvbmluZwBTdHJpbmcAaQBEZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19m
ZmYzZGY4OTA5M2Y0ZTk0OTFhNjY4NjQ3ZmE0NjBlMi5kbGwAc2V0X0lEX0lzTnVsbABTZXROdWxs
AHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRp
b25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91
dHB1dE1hcABJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdldF9SZXNv
dXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGlt
ZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU0NfZmZmM2RmODkwOTNmNGU5NDkx
YTY2ODY0N2ZhNDYwZTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01v
ZGVzAFNDX2ZmZjNkZjg5MDkzZjRlOTQ5MWE2Njg2NDdmYTQ2MGUyLlByb3BlcnRpZXMAVmFyaWFi
bGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMA
Q29ubmVjdGlvbnMAT2JqZWN0AEVuZE9mUm93c2V0AG9wX0ltcGxpY2l0AGdldF9EZWZhdWx0AFVz
ZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3Fs
U2VydmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Q
cm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAA
gJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBl
AHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQA
bwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAw
AABxUwBDAF8AZgBmAGYAMwBkAGYAOAA5ADAAOQAzAGYANABlADkANAA5ADEAYQA2ADYAOAA2ADQA
NwBmAGEANAA2ADAAZQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBz
AAAZNtapFYsOQ6cXXAreldARAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFdBQABEUUICSADARI9
HQgSQQUgAgEIHAMgAAIGIAICDhF1BSABHQgIBgABEnkRfQUgABKAgQcgAgEOEoCBCLd6XFYZNOCJ
CImEXc2AgMyRAgYIAwYSFAMGEhgDBhJJAwYSVQMGElkDBhIgBSABARIMBSABARFFBCABAQIJIAQB
CA4SPRJBBSABARJJBAAAElUEAAASWQUAAQESWQQAABIgAwAAAQQoABFFAygAAgQIABJVBAgAElkE
CAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAj
U0NfZmZmM2RmODkwOTNmNGU5NDkxYTY2ODY0N2ZhNDYwZTIAAAUBAAAAABYBABFDb3B5cmlnaHQg
QCAgMjAyMgAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNw
bGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJl
c291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVy
ZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJj
ZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAIMQAAAAAAAAAAAAAi
MQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFDEAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2Nv
cmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAA7AMAAAAAAAAAAAAA7AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBEwDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACgDAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZgBmAGYAMwBkAGYAOAA5ADAAOQAzAGYANABlADkANAA5ADEAYQA2ADYAOAA2ADQA
NwBmAGEANAA2ADAAZQAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBmAGYAZgAzAGQA
ZgA4ADkAMAA5ADMAZgA0AGUAOQA0ADkAMQBhADYANgA4ADYANAA3AGYAYQA0ADYAMABlADIALgBk
AGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgACAAMgAwADIAMgAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYA
ZgBmADMAZABmADgAOQAwADkAMwBmADQAZQA5ADQAOQAxAGEANgA2ADgANgA0ADcAZgBhADQANgAw
AGUAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBmAGYA
ZgAzAGQAZgA4ADkAMAA5ADMAZgA0AGUAOQA0ADkAMQBhADYANgA4ADYANAA3AGYAYQA0ADYAMABl
ADIAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAADQxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_fff3df89093f4e9491a668647fa460e2</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">45</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\fact table\Script Component.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\Script Component.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\fact table\Script Component.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Script Component.Outputs[Output 0].Columns[ID]"
                      dataType="numeric"
                      lineageId="Package\fact table\Script Component.Outputs[Output 0].Columns[ID]"
                      name="ID"
                      precision="18" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\fact table\Sort"
              componentClassID="Microsoft.Sort"
              contactInfo="Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows."
              name="Sort"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the Sort transformation removes rows with duplicate sort values."
                  name="EliminateDuplicates">true</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of threads to use for sorting."
                  expressionType="Notify"
                  name="MaximumThreads">-1</property>
              </properties>
              <inputs>
                <input
                  refId="Package\fact table\Sort.Inputs[Sort Input]"
                  name="Sort Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[Order_Quantity]"
                      cachedDataType="r8"
                      cachedName="Order_Quantity"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Order_Quantity]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[Unit_Cost]"
                      cachedDataType="r8"
                      cachedName="Unit_Cost"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Unit_Cost]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[Unit_Price]"
                      cachedDataType="r8"
                      cachedName="Unit_Price"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Unit_Price]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[Profit]"
                      cachedDataType="r8"
                      cachedName="Profit"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Profit]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[Cost]"
                      cachedDataType="r8"
                      cachedName="Cost"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Cost]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[Revenue]"
                      cachedDataType="r8"
                      cachedName="Revenue"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Revenue]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">0</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[ID_CUST]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_CUST"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_CUST]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">2</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[ID_REG]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_REG"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_REG]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">3</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[ID_CATEGORY]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_CATEGORY"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_CATEGORY]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">5</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[ID_PRODUCT]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="5"
                      cachedName="ID_PRODUCT"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_PRODUCT]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">4</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\fact table\Sort.Inputs[Sort Input].Columns[Date DB]"
                      cachedDataType="dbDate"
                      cachedName="Date DB"
                      lineageId="Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Date DB]">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the comparison options for character data."
                          name="NewComparisonFlags">0</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the sort order of the column."
                          name="NewSortKeyPosition">1</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\fact table\Sort.Outputs[Sort Output]"
                  isSorted="true"
                  name="Sort Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[Order_Quantity]"
                      dataType="r8"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Order_Quantity]"
                      name="Order_Quantity">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Order_Quantity]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[Unit_Cost]"
                      dataType="r8"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Unit_Cost]"
                      name="Unit_Cost">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Unit_Cost]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[Unit_Price]"
                      dataType="r8"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Unit_Price]"
                      name="Unit_Price">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Unit_Price]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[Profit]"
                      dataType="r8"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Profit]"
                      name="Profit">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Profit]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[Cost]"
                      dataType="r8"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Cost]"
                      name="Cost">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Cost]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[Revenue]"
                      dataType="r8"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Revenue]"
                      name="Revenue">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Revenue]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_CUST]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_CUST]"
                      name="ID_CUST"
                      sortKeyPosition="2">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_CUST]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_REG]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_REG]"
                      name="ID_REG"
                      sortKeyPosition="3">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_REG]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_CATEGORY]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_CATEGORY]"
                      name="ID_CATEGORY"
                      sortKeyPosition="5">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_CATEGORY]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_PRODUCT]"
                      codePage="1252"
                      dataType="str"
                      length="5"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[ID_PRODUCT]"
                      name="ID_PRODUCT"
                      sortKeyPosition="4">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[ID_PRODUCT]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\fact table\Sort.Outputs[Sort Output].Columns[Date DB]"
                      dataType="dbDate"
                      lineageId="Package\fact table\Sort.Outputs[Sort Output].Columns[Date DB]"
                      name="Date DB"
                      sortKeyPosition="1">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="Specifies the lineage identifier of the input column that is associated with this output column."
                          name="SortColumnId">#{Package\fact table\Aggregate.Outputs[Aggregate Output 1].Columns[Date DB]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\fact table.Paths[Aggregate Output 1]"
              endId="Package\fact table\Sort.Inputs[Sort Input]"
              name="Aggregate Output 1"
              startId="Package\fact table\Aggregate.Outputs[Aggregate Output 1]" />
            <path
              refId="Package\fact table.Paths[Data Conversion Output]"
              endId="Package\fact table\Date.Inputs[Lookup Input]"
              name="Data Conversion Output"
              startId="Package\fact table\Data Conversion.Outputs[Data Conversion Output]" />
            <path
              refId="Package\fact table.Paths[Excel Source Output]"
              endId="Package\fact table\Data Conversion.Inputs[Data Conversion Input]"
              name="Excel Source Output"
              startId="Package\fact table\Excel Source.Outputs[Excel Source Output]" />
            <path
              refId="Package\fact table.Paths[Lookup Match Output]"
              endId="Package\fact table\Region.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\fact table\Customer.Outputs[Lookup Match Output]" />
            <path
              refId="Package\fact table.Paths[Lookup Match Output1]"
              endId="Package\fact table\Category.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\fact table\Region.Outputs[Lookup Match Output]" />
            <path
              refId="Package\fact table.Paths[Lookup Match Output2]"
              endId="Package\fact table\Product.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\fact table\Category.Outputs[Lookup Match Output]" />
            <path
              refId="Package\fact table.Paths[Lookup Match Output3]"
              endId="Package\fact table\Aggregate.Inputs[Aggregate Input 1]"
              name="Lookup Match Output"
              startId="Package\fact table\Product.Outputs[Lookup Match Output]" />
            <path
              refId="Package\fact table.Paths[Lookup Match Output4]"
              endId="Package\fact table\Customer.Inputs[Lookup Input]"
              name="Lookup Match Output"
              startId="Package\fact table\Date.Outputs[Lookup Match Output]" />
            <path
              refId="Package\fact table.Paths[Output 0]"
              endId="Package\fact table\OLE DB Destination.Inputs[OLE DB Destination Input]"
              name="Output 0"
              startId="Package\fact table\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\fact table.Paths[Sort Output]"
              endId="Package\fact table\Script Component.Inputs[Input 0]"
              name="Sort Output"
              startId="Package\fact table\Sort.Outputs[Sort Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="178,42"
          Id="Package\dimension_category"
          TopLeft="546.538095238095,117.542857142857" />
        <NodeLayout
          Size="181,42"
          Id="Package\dimension_customer"
          TopLeft="351.252380952381,114.857142857143" />
        <NodeLayout
          Size="172,42"
          Id="Package\dimension_product"
          TopLeft="266.728571428571,190.161904761905" />
        <NodeLayout
          Size="166,42"
          Id="Package\dimension_region"
          TopLeft="464.82380952381,191.257142857143" />
        <NodeLayout
          Size="156,42"
          Id="Package\dimension_time"
          TopLeft="174.109523809524,114.4" />
        <NodeLayout
          Size="124,42"
          Id="Package\fact table"
          TopLeft="376,264.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\dimension_category">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="144,42"
          Id="Package\dimension_category\Excel Source"
          TopLeft="315.5,92.5" />
        <NodeLayout
          Size="167,42"
          Id="Package\dimension_category\Script Component"
          TopLeft="560,191.5" />
        <NodeLayout
          Size="99,42"
          Id="Package\dimension_category\Sort"
          TopLeft="290,188" />
        <NodeLayout
          Size="161,42"
          Id="Package\dimension_category\Data Conversion"
          TopLeft="540,95" />
        <NodeLayout
          Size="177,42"
          Id="Package\dimension_category\OLE DB Destination"
          TopLeft="393,280" />
        <EdgeLayout
          Id="Package\dimension_category.Paths[Sort Output]"
          TopLeft="389,210.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="171,0"
              Start="0,0"
              End="163.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="163.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_category.Paths[Output 0]"
          TopLeft="643.5,233.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-162,46.5"
              Start="0,0"
              End="-162,39">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.25"
                    Point2="0,23.25"
                    Point3="-4,23.25" />
                  <mssgle:LineSegment
                    End="-158,23.25" />
                  <mssgle:CubicBezierSegment
                    Point1="-158,23.25"
                    Point2="-162,23.25"
                    Point3="-162,27.25" />
                  <mssgle:LineSegment
                    End="-162,39" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_category.Paths[Excel Source Output]"
          TopLeft="459.5,114.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="80.5,0"
              Start="0,0"
              End="73,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="73,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_category.Paths[Data Conversion Output]"
          TopLeft="620.5,137">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-281,51"
              Start="0,0"
              End="-281,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.5"
                    Point2="0,25.5"
                    Point3="-4,25.5" />
                  <mssgle:LineSegment
                    End="-277,25.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-277,25.5"
                    Point2="-281,25.5"
                    Point3="-281,29.5" />
                  <mssgle:LineSegment
                    End="-281,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_category\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_category\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\dimension_customer">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42"
          Id="Package\dimension_customer\Excel Source"
          TopLeft="406.333333333333,132.333333333333" />
        <NodeLayout
          Size="177,42"
          Id="Package\dimension_customer\OLE DB Destination"
          TopLeft="532,388" />
        <NodeLayout
          Size="167,42"
          Id="Package\dimension_customer\Script Component"
          TopLeft="672.666666666667,269.333333333333" />
        <NodeLayout
          Size="99,42"
          Id="Package\dimension_customer\Sort"
          TopLeft="444,275.333333333333" />
        <NodeLayout
          Size="161,42"
          Id="Package\dimension_customer\Data Conversion"
          TopLeft="733.333333333333,133.333333333333" />
        <EdgeLayout
          Id="Package\dimension_customer.Paths[Sort Output]"
          TopLeft="543,293.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="129.666666666667,0"
              Start="0,0"
              End="122.166666666667,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="122.166666666667,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_customer.Paths[Output 0]"
          TopLeft="756.166666666667,311.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-135.666666666667,76.6666666666667"
              Start="0,0"
              End="-135.666666666667,69.1666666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,34.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="0,34.3333333333333"
                    Point2="0,38.3333333333333"
                    Point3="-4,38.3333333333333" />
                  <mssgle:LineSegment
                    End="-131.666666666667,38.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-131.666666666667,38.3333333333333"
                    Point2="-135.666666666667,38.3333333333333"
                    Point3="-135.666666666667,42.3333333333333" />
                  <mssgle:LineSegment
                    End="-135.666666666667,69.1666666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_customer.Paths[Excel Source Output]"
          TopLeft="562.333333333333,153.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="171,0"
              Start="0,0"
              End="163.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="163.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_customer.Paths[Data Conversion Output]"
          TopLeft="813.833333333333,175.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-320.333333333333,100"
              Start="0,0"
              End="-320.333333333333,92.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46" />
                  <mssgle:CubicBezierSegment
                    Point1="0,46"
                    Point2="0,50"
                    Point3="-4,50" />
                  <mssgle:LineSegment
                    End="-316.333333333333,50" />
                  <mssgle:CubicBezierSegment
                    Point1="-316.333333333333,50"
                    Point2="-320.333333333333,50"
                    Point3="-320.333333333333,54" />
                  <mssgle:LineSegment
                    End="-320.333333333333,92.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_customer\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_customer\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\dimension_product">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="167,42"
          Id="Package\dimension_product\Script Component"
          TopLeft="478.666666666667,172.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\dimension_product\OLE DB Destination"
          TopLeft="381.333333333333,288.833333333333" />
        <NodeLayout
          Size="144,42"
          Id="Package\dimension_product\Excel Source"
          TopLeft="288,84.5" />
        <NodeLayout
          Size="99,42"
          Id="Package\dimension_product\Sort"
          TopLeft="305.666666666667,176.166666666667" />
        <NodeLayout
          Size="161,42"
          Id="Package\dimension_product\Data Conversion"
          TopLeft="514,85.8333333333334" />
        <EdgeLayout
          Id="Package\dimension_product.Paths[Sort Output]"
          TopLeft="404.666666666667,195.333333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="74.0000000000001,0"
              Start="0,0"
              End="66.5000000000001,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="66.5000000000001,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_product.Paths[Output 0]"
          TopLeft="562.166666666667,214.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-92.3333333333334,74.3333333333333"
              Start="0,0"
              End="-92.3333333333334,66.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.1666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33.1666666666667"
                    Point2="0,37.1666666666667"
                    Point3="-4,37.1666666666667" />
                  <mssgle:LineSegment
                    End="-88.3333333333334,37.1666666666667" />
                  <mssgle:CubicBezierSegment
                    Point1="-88.3333333333334,37.1666666666667"
                    Point2="-92.3333333333334,37.1666666666667"
                    Point3="-92.3333333333334,41.1666666666667" />
                  <mssgle:LineSegment
                    End="-92.3333333333334,66.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_product.Paths[Excel Source Output]"
          TopLeft="432,106.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="82,0"
              Start="0,0"
              End="74.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="74.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_product.Paths[Data Conversion Output]"
          TopLeft="594.5,127.833333333333">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-239.333333333333,48.3333333333333"
              Start="0,0"
              End="-239.333333333333,40.8333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,20.1666666666666" />
                  <mssgle:CubicBezierSegment
                    Point1="0,20.1666666666666"
                    Point2="0,24.1666666666666"
                    Point3="-4,24.1666666666666" />
                  <mssgle:LineSegment
                    End="-235.333333333333,24.1666666666666" />
                  <mssgle:CubicBezierSegment
                    Point1="-235.333333333333,24.1666666666666"
                    Point2="-239.333333333333,24.1666666666666"
                    Point3="-239.333333333333,28.1666666666666" />
                  <mssgle:LineSegment
                    End="-239.333333333333,40.8333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_product\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_product\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\dimension_region">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="144,42"
          Id="Package\dimension_region\Excel Source"
          TopLeft="267.5,86" />
        <NodeLayout
          Size="167,42"
          Id="Package\dimension_region\Script Component"
          TopLeft="476,185" />
        <NodeLayout
          Size="99,42"
          Id="Package\dimension_region\Sort"
          TopLeft="300,192" />
        <NodeLayout
          Size="161,42"
          Id="Package\dimension_region\Data Conversion"
          TopLeft="502,86.5" />
        <NodeLayout
          Size="177,42"
          Id="Package\dimension_region\OLE DB Destination"
          TopLeft="369,288" />
        <EdgeLayout
          Id="Package\dimension_region.Paths[Sort Output]"
          TopLeft="399,209.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="77,0"
              Start="0,0"
              End="69.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="69.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_region.Paths[Output 0]"
          TopLeft="559.5,227">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-102,61"
              Start="0,0"
              End="-102,53.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,26.5"
                    Point2="0,30.5"
                    Point3="-4,30.5" />
                  <mssgle:LineSegment
                    End="-98,30.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-98,30.5"
                    Point2="-102,30.5"
                    Point3="-102,34.5" />
                  <mssgle:LineSegment
                    End="-102,53.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_region.Paths[Excel Source Output]"
          TopLeft="411.5,107.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="90.5,0"
              Start="0,0"
              End="83,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="83,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_region.Paths[Data Conversion Output]"
          TopLeft="582.5,128.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-233,63.5"
              Start="0,0"
              End="-233,56">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.75"
                    Point2="0,31.75"
                    Point3="-4,31.75" />
                  <mssgle:LineSegment
                    End="-229,31.75" />
                  <mssgle:CubicBezierSegment
                    Point1="-229,31.75"
                    Point2="-233,31.75"
                    Point3="-233,35.75" />
                  <mssgle:LineSegment
                    End="-233,56" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_region\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_region\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\dimension_time">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\dimension_time\OLE DB Destination"
          TopLeft="313,315" />
        <NodeLayout
          Size="144,42"
          Id="Package\dimension_time\Excel Source"
          TopLeft="276,86" />
        <NodeLayout
          Size="161,42"
          Id="Package\dimension_time\Data Conversion"
          TopLeft="538,129" />
        <NodeLayout
          Size="99,42"
          Id="Package\dimension_time\Sort"
          TopLeft="292,192" />
        <EdgeLayout
          Id="Package\dimension_time.Paths[Sort Output]"
          TopLeft="341.5,234">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="60,81"
              Start="0,0"
              End="60,73.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,36.5"
                    Point2="0,40.5"
                    Point3="4,40.5" />
                  <mssgle:LineSegment
                    End="56,40.5" />
                  <mssgle:CubicBezierSegment
                    Point1="56,40.5"
                    Point2="60,40.5"
                    Point3="60,44.5" />
                  <mssgle:LineSegment
                    End="60,73.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_time.Paths[Excel Source Output]"
          TopLeft="420,107">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="118,37.3333333333333"
              Start="0,0"
              End="110.5,37.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="64.2018348623853,0" />
                  <mssgle:CubicBezierSegment
                    Point1="64.2018348623853,0"
                    Point2="68.2018348623853,0"
                    Point3="68.2018348623853,4" />
                  <mssgle:LineSegment
                    End="68.2018348623853,33.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="68.2018348623853,33.3333333333333"
                    Point2="68.2018348623853,37.3333333333333"
                    Point3="72.2018348623853,37.3333333333333" />
                  <mssgle:LineSegment
                    End="110.5,37.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\dimension_time.Paths[Data Conversion Output]"
          TopLeft="538,155.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-147,57.3333333333333"
              Start="0,0"
              End="-139.5,57.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-58.0366972477065,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-58.0366972477065,0"
                    Point2="-62.0366972477065,0"
                    Point3="-62.0366972477065,4" />
                  <mssgle:LineSegment
                    End="-62.0366972477065,53.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-62.0366972477065,53.3333333333333"
                    Point2="-62.0366972477065,57.3333333333333"
                    Point3="-66.0366972477065,57.3333333333333" />
                  <mssgle:LineSegment
                    End="-139.5,57.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text=""
          ParentId="Package\dimension_time"
          FontInfo="{assembly:Null}"
          Size="29,NaN"
          Id="5a51f785-b7f3-4062-8efe-4eb9b5eab5d1"
          TopLeft="5.5,138" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_time\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\dimension_time\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\fact table">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="117,42"
          Id="Package\fact table\Product"
          TopLeft="636.692307692308,370.615384615385" />
        <NodeLayout
          Size="127,42"
          Id="Package\fact table\Customer"
          TopLeft="625.923076923077,169.846153846154" />
        <NodeLayout
          Size="99,42"
          Id="Package\fact table\Sort"
          TopLeft="348.636363636364,459.272727272727" />
        <NodeLayout
          Size="114,42"
          Id="Package\fact table\Region"
          TopLeft="338,280.384615384615" />
        <NodeLayout
          Size="177,42"
          Id="Package\fact table\OLE DB Destination"
          TopLeft="902.692307692308,458.923076923077" />
        <NodeLayout
          Size="161,42"
          Id="Package\fact table\Data Conversion"
          TopLeft="607.692307692308,74" />
        <NodeLayout
          Size="102,42"
          Id="Package\fact table\Date"
          TopLeft="344,171" />
        <NodeLayout
          Size="167,42"
          Id="Package\fact table\Script Component"
          TopLeft="623.538461538461,457.384615384615" />
        <NodeLayout
          Size="124,42"
          Id="Package\fact table\Category"
          TopLeft="635.615384615385,275.230769230769" />
        <NodeLayout
          Size="130,42"
          Id="Package\fact table\Aggregate"
          TopLeft="330.230769230769,368.384615384615" />
        <NodeLayout
          Size="144,42"
          Id="Package\fact table\Excel Source"
          TopLeft="336,73" />
        <EdgeLayout
          Id="Package\fact table.Paths[Sort Output]"
          TopLeft="447.636363636364,479.328671328671">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="175.902097902098,0"
              Start="0,0"
              End="168.402097902098,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="168.402097902098,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\fact table.Paths[Output 0]"
          TopLeft="790.538461538461,479.153846153846">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="112.153846153846,0"
              Start="0,0"
              End="104.653846153846,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="104.653846153846,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="44.326923076923,5,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\fact table.Paths[Lookup Match Output3]"
          TopLeft="636.692307692308,390.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-176.461538461538,0"
              Start="0,0"
              End="-168.961538461538,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-168.961538461538,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-132.672155949519,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\fact table.Paths[Lookup Match Output2]"
          TopLeft="696.403846153846,317.230769230769">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.3846153846154"
              Start="0,0"
              End="0,45.8846153846154">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.8846153846154" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,17.1376201923077,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\fact table.Paths[Lookup Match Output1]"
          TopLeft="452,298.807692307692">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="183.615384615385,0"
              Start="0,0"
              End="176.115384615385,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="176.115384615385,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="39.8663055889423,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\fact table.Paths[Lookup Match Output]"
          TopLeft="689.423076923077,211.846153846154">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-294.423076923077,68.5384615384615"
              Start="0,0"
              End="-294.423076923077,61.0384615384615">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.2692307692308" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.2692307692308"
                    Point2="0,34.2692307692308"
                    Point3="-4,34.2692307692308" />
                  <mssgle:LineSegment
                    End="-290.423076923077,34.2692307692308" />
                  <mssgle:CubicBezierSegment
                    Point1="-290.423076923077,34.2692307692308"
                    Point2="-294.423076923077,34.2692307692308"
                    Point3="-294.423076923077,38.2692307692308" />
                  <mssgle:LineSegment
                    End="-294.423076923077,61.0384615384615" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-204.271577524038,39.2692307692308,114.120078125,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\fact table.Paths[Excel Source Output]"
          TopLeft="480,94.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="127.692307692308,0"
              Start="0,0"
              End="120.192307692308,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="120.192307692308,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\fact table.Paths[Data Conversion Output]"
          TopLeft="688.192307692308,116">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-293.192307692308,55"
              Start="0,0"
              End="-293.192307692308,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.5"
                    Point2="0,27.5"
                    Point3="-4,27.5" />
                  <mssgle:LineSegment
                    End="-289.192307692308,27.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-289.192307692308,27.5"
                    Point2="-293.192307692308,27.5"
                    Point3="-293.192307692308,31.5" />
                  <mssgle:LineSegment
                    End="-293.192307692308,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\fact table.Paths[Aggregate Output 1]"
          TopLeft="396.683566433567,410.384615384615">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.8881118881119"
              Start="0,0"
              End="0,41.3881118881119">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.3881118881119" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\fact table.Paths[Lookup Match Output4]"
          TopLeft="446,191.423076923077">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="179.923076923077,0"
              Start="0,0"
              End="172.423076923077,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="172.423076923077,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="38.0201517427885,5,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\fact table\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\fact table\Product">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_PRODUCT]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\fact table\Category">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_CATEGORY]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\fact table\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\fact table\Date">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_TIME]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\fact table\Region">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_REGION]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\fact table\Customer">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:boolean">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[DIM_CUSTOMER]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:int">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>